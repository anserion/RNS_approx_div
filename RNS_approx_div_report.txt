Compare methods of RNS approx divizion
1. Prof. Chervyakov N.I. RNS approx method
2. Prof. Parhami RNS approx method
3. "Classic" binary divizion without RNS

bin_n=24
RNS_n=4
precision_RNS_n=4
p=
       5=0 1 0 1 
       7=0 1 1 1 
       9=1 0 0 1 
      11=1 0 1 1 

pp=    3465=0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 
main:  LUT_add_calc: p=5
   0   1   2   3   4
   1   2   3   4   0
   2   3   4   0   1
   3   4   0   1   2
   4   0   1   2   3

main:  LUT_add_calc: p=7
   0   1   2   3   4   5   6
   1   2   3   4   5   6   0
   2   3   4   5   6   0   1
   3   4   5   6   0   1   2
   4   5   6   0   1   2   3
   5   6   0   1   2   3   4
   6   0   1   2   3   4   5

main:  LUT_add_calc: p=9
   0   1   2   3   4   5   6   7   8
   1   2   3   4   5   6   7   8   0
   2   3   4   5   6   7   8   0   1
   3   4   5   6   7   8   0   1   2
   4   5   6   7   8   0   1   2   3
   5   6   7   8   0   1   2   3   4
   6   7   8   0   1   2   3   4   5
   7   8   0   1   2   3   4   5   6
   8   0   1   2   3   4   5   6   7

main:  LUT_add_calc: p=11
   0   1   2   3   4   5   6   7   8   9  10
   1   2   3   4   5   6   7   8   9  10   0
   2   3   4   5   6   7   8   9  10   0   1
   3   4   5   6   7   8   9  10   0   1   2
   4   5   6   7   8   9  10   0   1   2   3
   5   6   7   8   9  10   0   1   2   3   4
   6   7   8   9  10   0   1   2   3   4   5
   7   8   9  10   0   1   2   3   4   5   6
   8   9  10   0   1   2   3   4   5   6   7
   9  10   0   1   2   3   4   5   6   7   8
  10   0   1   2   3   4   5   6   7   8   9

main: LUT_neg_calc: p=5
main:  LUT_neg_calc: 0-->       0=0 0 0 0 
main:  LUT_neg_calc: 1-->       4=0 1 0 0 
main:  LUT_neg_calc: 2-->       3=0 0 1 1 
main:  LUT_neg_calc: 3-->       2=0 0 1 0 
main:  LUT_neg_calc: 4-->       1=0 0 0 1 

main: LUT_neg_calc: p=7
main:  LUT_neg_calc: 0-->       0=0 0 0 0 
main:  LUT_neg_calc: 1-->       6=0 1 1 0 
main:  LUT_neg_calc: 2-->       5=0 1 0 1 
main:  LUT_neg_calc: 3-->       4=0 1 0 0 
main:  LUT_neg_calc: 4-->       3=0 0 1 1 
main:  LUT_neg_calc: 5-->       2=0 0 1 0 
main:  LUT_neg_calc: 6-->       1=0 0 0 1 

main: LUT_neg_calc: p=9
main:  LUT_neg_calc: 0-->       0=0 0 0 0 
main:  LUT_neg_calc: 1-->       8=1 0 0 0 
main:  LUT_neg_calc: 2-->       7=0 1 1 1 
main:  LUT_neg_calc: 3-->       6=0 1 1 0 
main:  LUT_neg_calc: 4-->       5=0 1 0 1 
main:  LUT_neg_calc: 5-->       4=0 1 0 0 
main:  LUT_neg_calc: 6-->       3=0 0 1 1 
main:  LUT_neg_calc: 7-->       2=0 0 1 0 
main:  LUT_neg_calc: 8-->       1=0 0 0 1 

main: LUT_neg_calc: p=11
main:  LUT_neg_calc: 0-->       0=0 0 0 0 
main:  LUT_neg_calc: 1-->      10=1 0 1 0 
main:  LUT_neg_calc: 2-->       9=1 0 0 1 
main:  LUT_neg_calc: 3-->       8=1 0 0 0 
main:  LUT_neg_calc: 4-->       7=0 1 1 1 
main:  LUT_neg_calc: 5-->       6=0 1 1 0 
main:  LUT_neg_calc: 6-->       5=0 1 0 1 
main:  LUT_neg_calc: 7-->       4=0 1 0 0 
main:  LUT_neg_calc: 8-->       3=0 0 1 1 
main:  LUT_neg_calc: 9-->       2=0 0 1 0 
main:  LUT_neg_calc: 10-->       1=0 0 0 1 

main:  LUT_sub_calc: p=5
   0   4   3   2   1
   1   0   4   3   2
   2   1   0   4   3
   3   2   1   0   4
   4   3   2   1   0

main:  LUT_sub_calc: p=7
   0   6   5   4   3   2   1
   1   0   6   5   4   3   2
   2   1   0   6   5   4   3
   3   2   1   0   6   5   4
   4   3   2   1   0   6   5
   5   4   3   2   1   0   6
   6   5   4   3   2   1   0

main:  LUT_sub_calc: p=9
   0   8   7   6   5   4   3   2   1
   1   0   8   7   6   5   4   3   2
   2   1   0   8   7   6   5   4   3
   3   2   1   0   8   7   6   5   4
   4   3   2   1   0   8   7   6   5
   5   4   3   2   1   0   8   7   6
   6   5   4   3   2   1   0   8   7
   7   6   5   4   3   2   1   0   8
   8   7   6   5   4   3   2   1   0

main:  LUT_sub_calc: p=11
   0  10   9   8   7   6   5   4   3   2   1
   1   0  10   9   8   7   6   5   4   3   2
   2   1   0  10   9   8   7   6   5   4   3
   3   2   1   0  10   9   8   7   6   5   4
   4   3   2   1   0  10   9   8   7   6   5
   5   4   3   2   1   0  10   9   8   7   6
   6   5   4   3   2   1   0  10   9   8   7
   7   6   5   4   3   2   1   0  10   9   8
   8   7   6   5   4   3   2   1   0  10   9
   9   8   7   6   5   4   3   2   1   0  10
  10   9   8   7   6   5   4   3   2   1   0

main:  LUT_mul_calc: p=5
   0   0   0   0   0
   0   1   2   3   4
   0   2   4   1   3
   0   3   1   4   2
   0   4   3   2   1

main:  LUT_mul_calc: p=7
   0   0   0   0   0   0   0
   0   1   2   3   4   5   6
   0   2   4   6   1   3   5
   0   3   6   2   5   1   4
   0   4   1   5   2   6   3
   0   5   3   1   6   4   2
   0   6   5   4   3   2   1

main:  LUT_mul_calc: p=9
   0   0   0   0   0   0   0   0   0
   0   1   2   3   4   5   6   7   8
   0   2   4   6   8   1   3   5   7
   0   3   6   0   3   6   0   3   6
   0   4   8   3   7   2   6   1   5
   0   5   1   6   2   7   3   8   4
   0   6   3   0   6   3   0   6   3
   0   7   5   3   1   8   6   4   2
   0   8   7   6   5   4   3   2   1

main:  LUT_mul_calc: p=11
   0   0   0   0   0   0   0   0   0   0   0
   0   1   2   3   4   5   6   7   8   9  10
   0   2   4   6   8  10   1   3   5   7   9
   0   3   6   9   1   4   7  10   2   5   8
   0   4   8   1   5   9   2   6  10   3   7
   0   5  10   4   9   3   8   2   7   1   6
   0   6   1   7   2   8   3   9   4  10   5
   0   7   3  10   6   2   9   5   1   8   4
   0   8   5   2  10   7   4   1   9   6   3
   0   9   7   5   3   1  10   8   6   4   2
   0  10   9   8   7   6   5   4   3   2   1

main: LUT_inv_calc: p=5
main:  LUT_inv_calc: 0-->       0=0 0 0 0 
main:  LUT_inv_calc: 1-->       1=0 0 0 1 
main:  LUT_inv_calc: 2-->       3=0 0 1 1 
main:  LUT_inv_calc: 3-->       2=0 0 1 0 
main:  LUT_inv_calc: 4-->       4=0 1 0 0 

main: LUT_inv_calc: p=7
main:  LUT_inv_calc: 0-->       0=0 0 0 0 
main:  LUT_inv_calc: 1-->       1=0 0 0 1 
main:  LUT_inv_calc: 2-->       4=0 1 0 0 
main:  LUT_inv_calc: 3-->       5=0 1 0 1 
main:  LUT_inv_calc: 4-->       2=0 0 1 0 
main:  LUT_inv_calc: 5-->       3=0 0 1 1 
main:  LUT_inv_calc: 6-->       6=0 1 1 0 

main: LUT_inv_calc: p=9
main:  LUT_inv_calc: 0-->       0=0 0 0 0 
main:  LUT_inv_calc: 1-->       1=0 0 0 1 
main:  LUT_inv_calc: 2-->       5=0 1 0 1 
main:  LUT_inv_calc: 3-->       0=0 0 0 0 
main:  LUT_inv_calc: 4-->       7=0 1 1 1 
main:  LUT_inv_calc: 5-->       2=0 0 1 0 
main:  LUT_inv_calc: 6-->       0=0 0 0 0 
main:  LUT_inv_calc: 7-->       4=0 1 0 0 
main:  LUT_inv_calc: 8-->       8=1 0 0 0 

main: LUT_inv_calc: p=11
main:  LUT_inv_calc: 0-->       0=0 0 0 0 
main:  LUT_inv_calc: 1-->       1=0 0 0 1 
main:  LUT_inv_calc: 2-->       6=0 1 1 0 
main:  LUT_inv_calc: 3-->       4=0 1 0 0 
main:  LUT_inv_calc: 4-->       3=0 0 1 1 
main:  LUT_inv_calc: 5-->       9=1 0 0 1 
main:  LUT_inv_calc: 6-->       2=0 0 1 0 
main:  LUT_inv_calc: 7-->       8=1 0 0 0 
main:  LUT_inv_calc: 8-->       7=0 1 1 1 
main:  LUT_inv_calc: 9-->       5=0 1 0 1 
main:  LUT_inv_calc: 10-->      10=1 0 1 0 

main:  LUT_formal_div_calc: p=5
   0   0   0   0   0
   0   1   3   2   4
   0   2   1   4   3
   0   3   4   1   2
   0   4   2   3   1

main:  LUT_formal_div_calc: p=7
   0   0   0   0   0   0   0
   0   1   4   5   2   3   6
   0   2   1   3   4   6   5
   0   3   5   1   6   2   4
   0   4   2   6   1   5   3
   0   5   6   4   3   1   2
   0   6   3   2   5   4   1

main:  LUT_formal_div_calc: p=9
   0   0   0   0   0   0   0   0   0
   0   1   5   0   7   2   0   4   8
   0   2   1   0   5   4   0   8   7
   0   3   6   0   3   6   0   3   6
   0   4   2   0   1   8   0   7   5
   0   5   7   0   8   1   0   2   4
   0   6   3   0   6   3   0   6   3
   0   7   8   0   4   5   0   1   2
   0   8   4   0   2   7   0   5   1

main:  LUT_formal_div_calc: p=11
   0   0   0   0   0   0   0   0   0   0   0
   0   1   6   4   3   9   2   8   7   5  10
   0   2   1   8   6   7   4   5   3  10   9
   0   3   7   1   9   5   6   2  10   4   8
   0   4   2   5   1   3   8  10   6   9   7
   0   5   8   9   4   1  10   7   2   3   6
   0   6   3   2   7  10   1   4   9   8   5
   0   7   9   6  10   8   3   1   5   2   4
   0   8   4  10   2   6   5   9   1   7   3
   0   9  10   3   5   4   7   6   8   1   2
   0  10   5   7   8   2   9   3   4   6   1

main: LUT_digs_calc: 1=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 2=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 3=
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 4=
       4=0 1 0 0 
       4=0 1 0 0 
       4=0 1 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 5=
       0=0 0 0 0 
       5=0 1 0 1 
       5=0 1 0 1 
       5=0 1 0 1 

main: LUT_digs_calc: 6=
       1=0 0 0 1 
       6=0 1 1 0 
       6=0 1 1 0 
       6=0 1 1 0 

main: LUT_digs_calc: 7=
       2=0 0 1 0 
       0=0 0 0 0 
       7=0 1 1 1 
       7=0 1 1 1 

main: LUT_digs_calc: 8=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 9=
       4=0 1 0 0 
       2=0 0 1 0 
       0=0 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 10=
       0=0 0 0 0 
       3=0 0 1 1 
       1=0 0 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 11=
       1=0 0 0 1 
       4=0 1 0 0 
       2=0 0 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 12=
       2=0 0 1 0 
       5=0 1 0 1 
       3=0 0 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 13=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 14=
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 

main: LUT_digs_calc: 15=
       0=0 0 0 0 
       1=0 0 0 1 
       6=0 1 1 0 
       4=0 1 0 0 

main: LUT_digs_calc: 16=
       1=0 0 0 1 
       2=0 0 1 0 
       7=0 1 1 1 
       5=0 1 0 1 

main: LUT_digs_calc: 17=
       2=0 0 1 0 
       3=0 0 1 1 
       8=1 0 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 18=
       3=0 0 1 1 
       4=0 1 0 0 
       0=0 0 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 19=
       4=0 1 0 0 
       5=0 1 0 1 
       1=0 0 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 20=
       0=0 0 0 0 
       6=0 1 1 0 
       2=0 0 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 21=
       1=0 0 0 1 
       0=0 0 0 0 
       3=0 0 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 22=
       2=0 0 1 0 
       1=0 0 0 1 
       4=0 1 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 23=
       3=0 0 1 1 
       2=0 0 1 0 
       5=0 1 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 24=
       4=0 1 0 0 
       3=0 0 1 1 
       6=0 1 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 25=
       0=0 0 0 0 
       4=0 1 0 0 
       7=0 1 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 26=
       1=0 0 0 1 
       5=0 1 0 1 
       8=1 0 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 27=
       2=0 0 1 0 
       6=0 1 1 0 
       0=0 0 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 28=
       3=0 0 1 1 
       0=0 0 0 0 
       1=0 0 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 29=
       4=0 1 0 0 
       1=0 0 0 1 
       2=0 0 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 30=
       0=0 0 0 0 
       2=0 0 1 0 
       3=0 0 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 31=
       1=0 0 0 1 
       3=0 0 1 1 
       4=0 1 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 32=
       2=0 0 1 0 
       4=0 1 0 0 
       5=0 1 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 33=
       3=0 0 1 1 
       5=0 1 0 1 
       6=0 1 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 34=
       4=0 1 0 0 
       6=0 1 1 0 
       7=0 1 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 35=
       0=0 0 0 0 
       0=0 0 0 0 
       8=1 0 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 36=
       1=0 0 0 1 
       1=0 0 0 1 
       0=0 0 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 37=
       2=0 0 1 0 
       2=0 0 1 0 
       1=0 0 0 1 
       4=0 1 0 0 

main: LUT_digs_calc: 38=
       3=0 0 1 1 
       3=0 0 1 1 
       2=0 0 1 0 
       5=0 1 0 1 

main: LUT_digs_calc: 39=
       4=0 1 0 0 
       4=0 1 0 0 
       3=0 0 1 1 
       6=0 1 1 0 

main: LUT_digs_calc: 40=
       0=0 0 0 0 
       5=0 1 0 1 
       4=0 1 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 41=
       1=0 0 0 1 
       6=0 1 1 0 
       5=0 1 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 42=
       2=0 0 1 0 
       0=0 0 0 0 
       6=0 1 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 43=
       3=0 0 1 1 
       1=0 0 0 1 
       7=0 1 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 44=
       4=0 1 0 0 
       2=0 0 1 0 
       8=1 0 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 45=
       0=0 0 0 0 
       3=0 0 1 1 
       0=0 0 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 46=
       1=0 0 0 1 
       4=0 1 0 0 
       1=0 0 0 1 
       2=0 0 1 0 

main: LUT_digs_calc: 47=
       2=0 0 1 0 
       5=0 1 0 1 
       2=0 0 1 0 
       3=0 0 1 1 

main: LUT_digs_calc: 48=
       3=0 0 1 1 
       6=0 1 1 0 
       3=0 0 1 1 
       4=0 1 0 0 

main: LUT_digs_calc: 49=
       4=0 1 0 0 
       0=0 0 0 0 
       4=0 1 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 50=
       0=0 0 0 0 
       1=0 0 0 1 
       5=0 1 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 51=
       1=0 0 0 1 
       2=0 0 1 0 
       6=0 1 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 52=
       2=0 0 1 0 
       3=0 0 1 1 
       7=0 1 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 53=
       3=0 0 1 1 
       4=0 1 0 0 
       8=1 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 54=
       4=0 1 0 0 
       5=0 1 0 1 
       0=0 0 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 55=
       0=0 0 0 0 
       6=0 1 1 0 
       1=0 0 0 1 
       0=0 0 0 0 

main: LUT_digs_calc: 56=
       1=0 0 0 1 
       0=0 0 0 0 
       2=0 0 1 0 
       1=0 0 0 1 

main: LUT_digs_calc: 57=
       2=0 0 1 0 
       1=0 0 0 1 
       3=0 0 1 1 
       2=0 0 1 0 

main: LUT_digs_calc: 58=
       3=0 0 1 1 
       2=0 0 1 0 
       4=0 1 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 59=
       4=0 1 0 0 
       3=0 0 1 1 
       5=0 1 0 1 
       4=0 1 0 0 

main: LUT_digs_calc: 60=
       0=0 0 0 0 
       4=0 1 0 0 
       6=0 1 1 0 
       5=0 1 0 1 

main: LUT_digs_calc: 61=
       1=0 0 0 1 
       5=0 1 0 1 
       7=0 1 1 1 
       6=0 1 1 0 

main: LUT_digs_calc: 62=
       2=0 0 1 0 
       6=0 1 1 0 
       8=1 0 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 63=
       3=0 0 1 1 
       0=0 0 0 0 
       0=0 0 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 64=
       4=0 1 0 0 
       1=0 0 0 1 
       1=0 0 0 1 
       9=1 0 0 1 

main: LUT_digs_calc: 65=
       0=0 0 0 0 
       2=0 0 1 0 
       2=0 0 1 0 
      10=1 0 1 0 

main: LUT_digs_calc: 66=
       1=0 0 0 1 
       3=0 0 1 1 
       3=0 0 1 1 
       0=0 0 0 0 

main: LUT_digs_calc: 67=
       2=0 0 1 0 
       4=0 1 0 0 
       4=0 1 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 68=
       3=0 0 1 1 
       5=0 1 0 1 
       5=0 1 0 1 
       2=0 0 1 0 

main: LUT_digs_calc: 69=
       4=0 1 0 0 
       6=0 1 1 0 
       6=0 1 1 0 
       3=0 0 1 1 

main: LUT_digs_calc: 70=
       0=0 0 0 0 
       0=0 0 0 0 
       7=0 1 1 1 
       4=0 1 0 0 

main: LUT_digs_calc: 71=
       1=0 0 0 1 
       1=0 0 0 1 
       8=1 0 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 72=
       2=0 0 1 0 
       2=0 0 1 0 
       0=0 0 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 73=
       3=0 0 1 1 
       3=0 0 1 1 
       1=0 0 0 1 
       7=0 1 1 1 

main: LUT_digs_calc: 74=
       4=0 1 0 0 
       4=0 1 0 0 
       2=0 0 1 0 
       8=1 0 0 0 

main: LUT_digs_calc: 75=
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 
       9=1 0 0 1 

main: LUT_digs_calc: 76=
       1=0 0 0 1 
       6=0 1 1 0 
       4=0 1 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 77=
       2=0 0 1 0 
       0=0 0 0 0 
       5=0 1 0 1 
       0=0 0 0 0 

main: LUT_digs_calc: 78=
       3=0 0 1 1 
       1=0 0 0 1 
       6=0 1 1 0 
       1=0 0 0 1 

main: LUT_digs_calc: 79=
       4=0 1 0 0 
       2=0 0 1 0 
       7=0 1 1 1 
       2=0 0 1 0 

main: LUT_digs_calc: 80=
       0=0 0 0 0 
       3=0 0 1 1 
       8=1 0 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 81=
       1=0 0 0 1 
       4=0 1 0 0 
       0=0 0 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 82=
       2=0 0 1 0 
       5=0 1 0 1 
       1=0 0 0 1 
       5=0 1 0 1 

main: LUT_digs_calc: 83=
       3=0 0 1 1 
       6=0 1 1 0 
       2=0 0 1 0 
       6=0 1 1 0 

main: LUT_digs_calc: 84=
       4=0 1 0 0 
       0=0 0 0 0 
       3=0 0 1 1 
       7=0 1 1 1 

main: LUT_digs_calc: 85=
       0=0 0 0 0 
       1=0 0 0 1 
       4=0 1 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 86=
       1=0 0 0 1 
       2=0 0 1 0 
       5=0 1 0 1 
       9=1 0 0 1 

main: LUT_digs_calc: 87=
       2=0 0 1 0 
       3=0 0 1 1 
       6=0 1 1 0 
      10=1 0 1 0 

main: LUT_digs_calc: 88=
       3=0 0 1 1 
       4=0 1 0 0 
       7=0 1 1 1 
       0=0 0 0 0 

main: LUT_digs_calc: 89=
       4=0 1 0 0 
       5=0 1 0 1 
       8=1 0 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 90=
       0=0 0 0 0 
       6=0 1 1 0 
       0=0 0 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 91=
       1=0 0 0 1 
       0=0 0 0 0 
       1=0 0 0 1 
       3=0 0 1 1 

main: LUT_digs_calc: 92=
       2=0 0 1 0 
       1=0 0 0 1 
       2=0 0 1 0 
       4=0 1 0 0 

main: LUT_digs_calc: 93=
       3=0 0 1 1 
       2=0 0 1 0 
       3=0 0 1 1 
       5=0 1 0 1 

main: LUT_digs_calc: 94=
       4=0 1 0 0 
       3=0 0 1 1 
       4=0 1 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 95=
       0=0 0 0 0 
       4=0 1 0 0 
       5=0 1 0 1 
       7=0 1 1 1 

main: LUT_digs_calc: 96=
       1=0 0 0 1 
       5=0 1 0 1 
       6=0 1 1 0 
       8=1 0 0 0 

main: LUT_digs_calc: 97=
       2=0 0 1 0 
       6=0 1 1 0 
       7=0 1 1 1 
       9=1 0 0 1 

main: LUT_digs_calc: 98=
       3=0 0 1 1 
       0=0 0 0 0 
       8=1 0 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 99=
       4=0 1 0 0 
       1=0 0 0 1 
       0=0 0 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 100=
       0=0 0 0 0 
       2=0 0 1 0 
       1=0 0 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 101=
       1=0 0 0 1 
       3=0 0 1 1 
       2=0 0 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 102=
       2=0 0 1 0 
       4=0 1 0 0 
       3=0 0 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 103=
       3=0 0 1 1 
       5=0 1 0 1 
       4=0 1 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 104=
       4=0 1 0 0 
       6=0 1 1 0 
       5=0 1 0 1 
       5=0 1 0 1 

main: LUT_digs_calc: 105=
       0=0 0 0 0 
       0=0 0 0 0 
       6=0 1 1 0 
       6=0 1 1 0 

main: LUT_digs_calc: 106=
       1=0 0 0 1 
       1=0 0 0 1 
       7=0 1 1 1 
       7=0 1 1 1 

main: LUT_digs_calc: 107=
       2=0 0 1 0 
       2=0 0 1 0 
       8=1 0 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 108=
       3=0 0 1 1 
       3=0 0 1 1 
       0=0 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 109=
       4=0 1 0 0 
       4=0 1 0 0 
       1=0 0 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 110=
       0=0 0 0 0 
       5=0 1 0 1 
       2=0 0 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 111=
       1=0 0 0 1 
       6=0 1 1 0 
       3=0 0 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 112=
       2=0 0 1 0 
       0=0 0 0 0 
       4=0 1 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 113=
       3=0 0 1 1 
       1=0 0 0 1 
       5=0 1 0 1 
       3=0 0 1 1 

main: LUT_digs_calc: 114=
       4=0 1 0 0 
       2=0 0 1 0 
       6=0 1 1 0 
       4=0 1 0 0 

main: LUT_digs_calc: 115=
       0=0 0 0 0 
       3=0 0 1 1 
       7=0 1 1 1 
       5=0 1 0 1 

main: LUT_digs_calc: 116=
       1=0 0 0 1 
       4=0 1 0 0 
       8=1 0 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 117=
       2=0 0 1 0 
       5=0 1 0 1 
       0=0 0 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 118=
       3=0 0 1 1 
       6=0 1 1 0 
       1=0 0 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 119=
       4=0 1 0 0 
       0=0 0 0 0 
       2=0 0 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 120=
       0=0 0 0 0 
       1=0 0 0 1 
       3=0 0 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 121=
       1=0 0 0 1 
       2=0 0 1 0 
       4=0 1 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 122=
       2=0 0 1 0 
       3=0 0 1 1 
       5=0 1 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 123=
       3=0 0 1 1 
       4=0 1 0 0 
       6=0 1 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 124=
       4=0 1 0 0 
       5=0 1 0 1 
       7=0 1 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 125=
       0=0 0 0 0 
       6=0 1 1 0 
       8=1 0 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 126=
       1=0 0 0 1 
       0=0 0 0 0 
       0=0 0 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 127=
       2=0 0 1 0 
       1=0 0 0 1 
       1=0 0 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 128=
       3=0 0 1 1 
       2=0 0 1 0 
       2=0 0 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 129=
       4=0 1 0 0 
       3=0 0 1 1 
       3=0 0 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 130=
       0=0 0 0 0 
       4=0 1 0 0 
       4=0 1 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 131=
       1=0 0 0 1 
       5=0 1 0 1 
       5=0 1 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 132=
       2=0 0 1 0 
       6=0 1 1 0 
       6=0 1 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 133=
       3=0 0 1 1 
       0=0 0 0 0 
       7=0 1 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 134=
       4=0 1 0 0 
       1=0 0 0 1 
       8=1 0 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 135=
       0=0 0 0 0 
       2=0 0 1 0 
       0=0 0 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 136=
       1=0 0 0 1 
       3=0 0 1 1 
       1=0 0 0 1 
       4=0 1 0 0 

main: LUT_digs_calc: 137=
       2=0 0 1 0 
       4=0 1 0 0 
       2=0 0 1 0 
       5=0 1 0 1 

main: LUT_digs_calc: 138=
       3=0 0 1 1 
       5=0 1 0 1 
       3=0 0 1 1 
       6=0 1 1 0 

main: LUT_digs_calc: 139=
       4=0 1 0 0 
       6=0 1 1 0 
       4=0 1 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 140=
       0=0 0 0 0 
       0=0 0 0 0 
       5=0 1 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 141=
       1=0 0 0 1 
       1=0 0 0 1 
       6=0 1 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 142=
       2=0 0 1 0 
       2=0 0 1 0 
       7=0 1 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 143=
       3=0 0 1 1 
       3=0 0 1 1 
       8=1 0 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 144=
       4=0 1 0 0 
       4=0 1 0 0 
       0=0 0 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 145=
       0=0 0 0 0 
       5=0 1 0 1 
       1=0 0 0 1 
       2=0 0 1 0 

main: LUT_digs_calc: 146=
       1=0 0 0 1 
       6=0 1 1 0 
       2=0 0 1 0 
       3=0 0 1 1 

main: LUT_digs_calc: 147=
       2=0 0 1 0 
       0=0 0 0 0 
       3=0 0 1 1 
       4=0 1 0 0 

main: LUT_digs_calc: 148=
       3=0 0 1 1 
       1=0 0 0 1 
       4=0 1 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 149=
       4=0 1 0 0 
       2=0 0 1 0 
       5=0 1 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 150=
       0=0 0 0 0 
       3=0 0 1 1 
       6=0 1 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 151=
       1=0 0 0 1 
       4=0 1 0 0 
       7=0 1 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 152=
       2=0 0 1 0 
       5=0 1 0 1 
       8=1 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 153=
       3=0 0 1 1 
       6=0 1 1 0 
       0=0 0 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 154=
       4=0 1 0 0 
       0=0 0 0 0 
       1=0 0 0 1 
       0=0 0 0 0 

main: LUT_digs_calc: 155=
       0=0 0 0 0 
       1=0 0 0 1 
       2=0 0 1 0 
       1=0 0 0 1 

main: LUT_digs_calc: 156=
       1=0 0 0 1 
       2=0 0 1 0 
       3=0 0 1 1 
       2=0 0 1 0 

main: LUT_digs_calc: 157=
       2=0 0 1 0 
       3=0 0 1 1 
       4=0 1 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 158=
       3=0 0 1 1 
       4=0 1 0 0 
       5=0 1 0 1 
       4=0 1 0 0 

main: LUT_digs_calc: 159=
       4=0 1 0 0 
       5=0 1 0 1 
       6=0 1 1 0 
       5=0 1 0 1 

main: LUT_digs_calc: 160=
       0=0 0 0 0 
       6=0 1 1 0 
       7=0 1 1 1 
       6=0 1 1 0 

main: LUT_digs_calc: 161=
       1=0 0 0 1 
       0=0 0 0 0 
       8=1 0 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 162=
       2=0 0 1 0 
       1=0 0 0 1 
       0=0 0 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 163=
       3=0 0 1 1 
       2=0 0 1 0 
       1=0 0 0 1 
       9=1 0 0 1 

main: LUT_digs_calc: 164=
       4=0 1 0 0 
       3=0 0 1 1 
       2=0 0 1 0 
      10=1 0 1 0 

main: LUT_digs_calc: 165=
       0=0 0 0 0 
       4=0 1 0 0 
       3=0 0 1 1 
       0=0 0 0 0 

main: LUT_digs_calc: 166=
       1=0 0 0 1 
       5=0 1 0 1 
       4=0 1 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 167=
       2=0 0 1 0 
       6=0 1 1 0 
       5=0 1 0 1 
       2=0 0 1 0 

main: LUT_digs_calc: 168=
       3=0 0 1 1 
       0=0 0 0 0 
       6=0 1 1 0 
       3=0 0 1 1 

main: LUT_digs_calc: 169=
       4=0 1 0 0 
       1=0 0 0 1 
       7=0 1 1 1 
       4=0 1 0 0 

main: LUT_digs_calc: 170=
       0=0 0 0 0 
       2=0 0 1 0 
       8=1 0 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 171=
       1=0 0 0 1 
       3=0 0 1 1 
       0=0 0 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 172=
       2=0 0 1 0 
       4=0 1 0 0 
       1=0 0 0 1 
       7=0 1 1 1 

main: LUT_digs_calc: 173=
       3=0 0 1 1 
       5=0 1 0 1 
       2=0 0 1 0 
       8=1 0 0 0 

main: LUT_digs_calc: 174=
       4=0 1 0 0 
       6=0 1 1 0 
       3=0 0 1 1 
       9=1 0 0 1 

main: LUT_digs_calc: 175=
       0=0 0 0 0 
       0=0 0 0 0 
       4=0 1 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 176=
       1=0 0 0 1 
       1=0 0 0 1 
       5=0 1 0 1 
       0=0 0 0 0 

main: LUT_digs_calc: 177=
       2=0 0 1 0 
       2=0 0 1 0 
       6=0 1 1 0 
       1=0 0 0 1 

main: LUT_digs_calc: 178=
       3=0 0 1 1 
       3=0 0 1 1 
       7=0 1 1 1 
       2=0 0 1 0 

main: LUT_digs_calc: 179=
       4=0 1 0 0 
       4=0 1 0 0 
       8=1 0 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 180=
       0=0 0 0 0 
       5=0 1 0 1 
       0=0 0 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 181=
       1=0 0 0 1 
       6=0 1 1 0 
       1=0 0 0 1 
       5=0 1 0 1 

main: LUT_digs_calc: 182=
       2=0 0 1 0 
       0=0 0 0 0 
       2=0 0 1 0 
       6=0 1 1 0 

main: LUT_digs_calc: 183=
       3=0 0 1 1 
       1=0 0 0 1 
       3=0 0 1 1 
       7=0 1 1 1 

main: LUT_digs_calc: 184=
       4=0 1 0 0 
       2=0 0 1 0 
       4=0 1 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 185=
       0=0 0 0 0 
       3=0 0 1 1 
       5=0 1 0 1 
       9=1 0 0 1 

main: LUT_digs_calc: 186=
       1=0 0 0 1 
       4=0 1 0 0 
       6=0 1 1 0 
      10=1 0 1 0 

main: LUT_digs_calc: 187=
       2=0 0 1 0 
       5=0 1 0 1 
       7=0 1 1 1 
       0=0 0 0 0 

main: LUT_digs_calc: 188=
       3=0 0 1 1 
       6=0 1 1 0 
       8=1 0 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 189=
       4=0 1 0 0 
       0=0 0 0 0 
       0=0 0 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 190=
       0=0 0 0 0 
       1=0 0 0 1 
       1=0 0 0 1 
       3=0 0 1 1 

main: LUT_digs_calc: 191=
       1=0 0 0 1 
       2=0 0 1 0 
       2=0 0 1 0 
       4=0 1 0 0 

main: LUT_digs_calc: 192=
       2=0 0 1 0 
       3=0 0 1 1 
       3=0 0 1 1 
       5=0 1 0 1 

main: LUT_digs_calc: 193=
       3=0 0 1 1 
       4=0 1 0 0 
       4=0 1 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 194=
       4=0 1 0 0 
       5=0 1 0 1 
       5=0 1 0 1 
       7=0 1 1 1 

main: LUT_digs_calc: 195=
       0=0 0 0 0 
       6=0 1 1 0 
       6=0 1 1 0 
       8=1 0 0 0 

main: LUT_digs_calc: 196=
       1=0 0 0 1 
       0=0 0 0 0 
       7=0 1 1 1 
       9=1 0 0 1 

main: LUT_digs_calc: 197=
       2=0 0 1 0 
       1=0 0 0 1 
       8=1 0 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 198=
       3=0 0 1 1 
       2=0 0 1 0 
       0=0 0 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 199=
       4=0 1 0 0 
       3=0 0 1 1 
       1=0 0 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 200=
       0=0 0 0 0 
       4=0 1 0 0 
       2=0 0 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 201=
       1=0 0 0 1 
       5=0 1 0 1 
       3=0 0 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 202=
       2=0 0 1 0 
       6=0 1 1 0 
       4=0 1 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 203=
       3=0 0 1 1 
       0=0 0 0 0 
       5=0 1 0 1 
       5=0 1 0 1 

main: LUT_digs_calc: 204=
       4=0 1 0 0 
       1=0 0 0 1 
       6=0 1 1 0 
       6=0 1 1 0 

main: LUT_digs_calc: 205=
       0=0 0 0 0 
       2=0 0 1 0 
       7=0 1 1 1 
       7=0 1 1 1 

main: LUT_digs_calc: 206=
       1=0 0 0 1 
       3=0 0 1 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: LUT_digs_calc: 207=
       2=0 0 1 0 
       4=0 1 0 0 
       0=0 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 208=
       3=0 0 1 1 
       5=0 1 0 1 
       1=0 0 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 209=
       4=0 1 0 0 
       6=0 1 1 0 
       2=0 0 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 210=
       0=0 0 0 0 
       0=0 0 0 0 
       3=0 0 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 211=
       1=0 0 0 1 
       1=0 0 0 1 
       4=0 1 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 212=
       2=0 0 1 0 
       2=0 0 1 0 
       5=0 1 0 1 
       3=0 0 1 1 

main: LUT_digs_calc: 213=
       3=0 0 1 1 
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 

main: LUT_digs_calc: 214=
       4=0 1 0 0 
       4=0 1 0 0 
       7=0 1 1 1 
       5=0 1 0 1 

main: LUT_digs_calc: 215=
       0=0 0 0 0 
       5=0 1 0 1 
       8=1 0 0 0 
       6=0 1 1 0 

main: LUT_digs_calc: 216=
       1=0 0 0 1 
       6=0 1 1 0 
       0=0 0 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 217=
       2=0 0 1 0 
       0=0 0 0 0 
       1=0 0 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 218=
       3=0 0 1 1 
       1=0 0 0 1 
       2=0 0 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 219=
       4=0 1 0 0 
       2=0 0 1 0 
       3=0 0 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 220=
       0=0 0 0 0 
       3=0 0 1 1 
       4=0 1 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 221=
       1=0 0 0 1 
       4=0 1 0 0 
       5=0 1 0 1 
       1=0 0 0 1 

main: LUT_digs_calc: 222=
       2=0 0 1 0 
       5=0 1 0 1 
       6=0 1 1 0 
       2=0 0 1 0 

main: LUT_digs_calc: 223=
       3=0 0 1 1 
       6=0 1 1 0 
       7=0 1 1 1 
       3=0 0 1 1 

main: LUT_digs_calc: 224=
       4=0 1 0 0 
       0=0 0 0 0 
       8=1 0 0 0 
       4=0 1 0 0 

main: LUT_digs_calc: 225=
       0=0 0 0 0 
       1=0 0 0 1 
       0=0 0 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 226=
       1=0 0 0 1 
       2=0 0 1 0 
       1=0 0 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 227=
       2=0 0 1 0 
       3=0 0 1 1 
       2=0 0 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 228=
       3=0 0 1 1 
       4=0 1 0 0 
       3=0 0 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 229=
       4=0 1 0 0 
       5=0 1 0 1 
       4=0 1 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 230=
       0=0 0 0 0 
       6=0 1 1 0 
       5=0 1 0 1 
      10=1 0 1 0 

main: LUT_digs_calc: 231=
       1=0 0 0 1 
       0=0 0 0 0 
       6=0 1 1 0 
       0=0 0 0 0 

main: LUT_digs_calc: 232=
       2=0 0 1 0 
       1=0 0 0 1 
       7=0 1 1 1 
       1=0 0 0 1 

main: LUT_digs_calc: 233=
       3=0 0 1 1 
       2=0 0 1 0 
       8=1 0 0 0 
       2=0 0 1 0 

main: LUT_digs_calc: 234=
       4=0 1 0 0 
       3=0 0 1 1 
       0=0 0 0 0 
       3=0 0 1 1 

main: LUT_digs_calc: 235=
       0=0 0 0 0 
       4=0 1 0 0 
       1=0 0 0 1 
       4=0 1 0 0 

main: LUT_digs_calc: 236=
       1=0 0 0 1 
       5=0 1 0 1 
       2=0 0 1 0 
       5=0 1 0 1 

main: LUT_digs_calc: 237=
       2=0 0 1 0 
       6=0 1 1 0 
       3=0 0 1 1 
       6=0 1 1 0 

main: LUT_digs_calc: 238=
       3=0 0 1 1 
       0=0 0 0 0 
       4=0 1 0 0 
       7=0 1 1 1 

main: LUT_digs_calc: 239=
       4=0 1 0 0 
       1=0 0 0 1 
       5=0 1 0 1 
       8=1 0 0 0 

main: LUT_digs_calc: 240=
       0=0 0 0 0 
       2=0 0 1 0 
       6=0 1 1 0 
       9=1 0 0 1 

main: LUT_digs_calc: 241=
       1=0 0 0 1 
       3=0 0 1 1 
       7=0 1 1 1 
      10=1 0 1 0 

main: LUT_digs_calc: 242=
       2=0 0 1 0 
       4=0 1 0 0 
       8=1 0 0 0 
       0=0 0 0 0 

main: LUT_digs_calc: 243=
       3=0 0 1 1 
       5=0 1 0 1 
       0=0 0 0 0 
       1=0 0 0 1 

main: LUT_digs_calc: 244=
       4=0 1 0 0 
       6=0 1 1 0 
       1=0 0 0 1 
       2=0 0 1 0 

main: LUT_digs_calc: 245=
       0=0 0 0 0 
       0=0 0 0 0 
       2=0 0 1 0 
       3=0 0 1 1 

main: LUT_digs_calc: 246=
       1=0 0 0 1 
       1=0 0 0 1 
       3=0 0 1 1 
       4=0 1 0 0 

main: LUT_digs_calc: 247=
       2=0 0 1 0 
       2=0 0 1 0 
       4=0 1 0 0 
       5=0 1 0 1 

main: LUT_digs_calc: 248=
       3=0 0 1 1 
       3=0 0 1 1 
       5=0 1 0 1 
       6=0 1 1 0 

main: LUT_digs_calc: 249=
       4=0 1 0 0 
       4=0 1 0 0 
       6=0 1 1 0 
       7=0 1 1 1 

main: LUT_digs_calc: 250=
       0=0 0 0 0 
       5=0 1 0 1 
       7=0 1 1 1 
       8=1 0 0 0 

main: LUT_digs_calc: 251=
       1=0 0 0 1 
       6=0 1 1 0 
       8=1 0 0 0 
       9=1 0 0 1 

main: LUT_digs_calc: 252=
       2=0 0 1 0 
       0=0 0 0 0 
       0=0 0 0 0 
      10=1 0 1 0 

main: LUT_digs_calc: 253=
       3=0 0 1 1 
       1=0 0 0 1 
       1=0 0 0 1 
       0=0 0 0 0 

main: LUT_digs_calc: 254=
       4=0 1 0 0 
       2=0 0 1 0 
       2=0 0 1 0 
       1=0 0 0 1 

main: LUT_digs_calc: 255=
       0=0 0 0 0 
       3=0 0 1 1 
       3=0 0 1 1 
       2=0 0 1 0 

main:  LUT_inv_P_calc: p=5
       0=0 0 0 0 
       3=0 0 1 1 
       2=0 0 1 0 
       9=1 0 0 1 

main:  LUT_inv_P_calc: p=7
       3=0 0 1 1 
       0=0 0 0 0 
       4=0 1 0 0 
       8=1 0 0 0 

main:  LUT_inv_P_calc: p=9
       4=0 1 0 0 
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 

main:  LUT_inv_P_calc: p=11
       1=0 0 0 1 
       2=0 0 1 0 
       5=0 1 0 1 
       0=0 0 0 0 

main:  pow2_RNS_calc: 2^0=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 

main:  pow2_RNS_calc: 2^1=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 

main:  pow2_RNS_calc: 2^2=
       4=0 1 0 0 
       4=0 1 0 0 
       4=0 1 0 0 
       4=0 1 0 0 

main:  pow2_RNS_calc: 2^3=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main:  pow2_RNS_calc: 2^4=
       1=0 0 0 1 
       2=0 0 1 0 
       7=0 1 1 1 
       5=0 1 0 1 

main:  pow2_RNS_calc: 2^5=
       2=0 0 1 0 
       4=0 1 0 0 
       5=0 1 0 1 
      10=1 0 1 0 

main:  pow2_RNS_calc: 2^6=
       4=0 1 0 0 
       1=0 0 0 1 
       1=0 0 0 1 
       9=1 0 0 1 

main:  pow2_RNS_calc: 2^7=
       3=0 0 1 1 
       2=0 0 1 0 
       2=0 0 1 0 
       7=0 1 1 1 

main:  pow2_RNS_calc: 2^8=
       1=0 0 0 1 
       4=0 1 0 0 
       4=0 1 0 0 
       3=0 0 1 1 

main:  pow2_RNS_calc: 2^9=
       2=0 0 1 0 
       1=0 0 0 1 
       8=1 0 0 0 
       6=0 1 1 0 

main:  pow2_RNS_calc: 2^10=
       4=0 1 0 0 
       2=0 0 1 0 
       7=0 1 1 1 
       1=0 0 0 1 

main:  pow2_RNS_calc: 2^11=
       3=0 0 1 1 
       4=0 1 0 0 
       5=0 1 0 1 
       2=0 0 1 0 

main:  pow2_RNS_calc: 2^12=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       4=0 1 0 0 

main:  pow2_RNS_calc: 2^13=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       8=1 0 0 0 

main:  pow2_RNS_calc: 2^14=
       4=0 1 0 0 
       4=0 1 0 0 
       4=0 1 0 0 
       5=0 1 0 1 

main:  pow2_RNS_calc: 2^15=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
      10=1 0 1 0 

main:  pow2_RNS_calc: 2^16=
       1=0 0 0 1 
       2=0 0 1 0 
       7=0 1 1 1 
       9=1 0 0 1 

main:  pow2_RNS_calc: 2^17=
       2=0 0 1 0 
       4=0 1 0 0 
       5=0 1 0 1 
       7=0 1 1 1 

main:  pow2_RNS_calc: 2^18=
       4=0 1 0 0 
       1=0 0 0 1 
       1=0 0 0 1 
       3=0 0 1 1 

main:  pow2_RNS_calc: 2^19=
       3=0 0 1 1 
       2=0 0 1 0 
       2=0 0 1 0 
       6=0 1 1 0 

main:  pow2_RNS_calc: 2^20=
       1=0 0 0 1 
       4=0 1 0 0 
       4=0 1 0 0 
       1=0 0 0 1 

main:  pow2_RNS_calc: 2^21=
       2=0 0 1 0 
       1=0 0 0 1 
       8=1 0 0 0 
       2=0 0 1 0 

main:  pow2_RNS_calc: 2^22=
       4=0 1 0 0 
       2=0 0 1 0 
       7=0 1 1 1 
       4=0 1 0 0 

main:  pow2_RNS_calc: 2^23=
       3=0 0 1 1 
       4=0 1 0 0 
       5=0 1 0 1 
       8=1 0 0 0 

main:  pow2_RNS_calc: 2^24=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       5=0 1 0 1 

main:  RNS_ppi_calc: 
     693=0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 
     495=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
     385=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 
     315=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 

main:  RNS_mu_calc: 
       2=0 0 1 0 
       3=0 0 1 1 
       4=0 1 0 0 
       8=1 0 0 0 

main:  RNS_basis_calc: 
    1386=0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 0 
    1485=0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
    1540=0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 
    2520=0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 0 


            rho=       28=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
             pp=     3465=0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 
         pp*rho=    97020=0 0 0 0 0 0 0 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 0 
log2_up(pp*rho)=       17=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
 log2_up(RNS_n)=        2=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
      precision=       19=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 
    2^precision=   524288=0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
k_approx*2^precision=
  209716=0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 
  224694=0 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
  233016=0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 
  381304=0 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 

--precision calc--
low level statistic: 
   not=7738 and=16872 xor=15296 nand=0 or=11012 LUT_read=0
binary device statistic: 
   bits_copy=17 bits_ins=4 bits_cut=0 bits_set=0
   zero_proc=34 one_proc=7 two_proc=0
arith device statistic: 
   shift_left=186 shift_right=70 bin_equ=198 bin_cmp=138
   adder=112 subtractor=100 multiplier=9 divider=4
   pow2_proc=0 log2_down=2 log2_up=2 random=0
convertion subroutines statistic: 
   bin_to_longint=48 longint_to_bin=2 print=11
--precision calc--
RNS device statistic: 
   RNS_add=0 RNS_sub=0 RNS_mul=0 RNS_formal_div=0
   RNS_copy=0 RNS_equ=0 RNS_random=0
   RNS_sign(MRS)=0 RNS_sign(Parhami)=0
   RNS_to_MRS=0 RNS_to_BSS=0 BSS_to_RNS=0



--F(a) calc--
low level statistic: 
   not=0 and=320 xor=320 nand=0 or=160 LUT_read=0
binary device statistic: 
   bits_copy=4 bits_ins=0 bits_cut=0 bits_set=0
   zero_proc=5 one_proc=0 two_proc=0
arith device statistic: 
   shift_left=16 shift_right=0 bin_equ=0 bin_cmp=0
   adder=8 subtractor=0 multiplier=4 divider=0
   pow2_proc=0 log2_down=0 log2_up=0 random=0
convertion subroutines statistic: 
   bin_to_longint=0 longint_to_bin=0 print=0
--F(a) calc--
RNS device statistic: 
   RNS_add=0 RNS_sub=0 RNS_mul=0 RNS_formal_div=0
   RNS_copy=0 RNS_equ=0 RNS_random=0
   RNS_sign(MRS)=0 RNS_sign(Parhami)=0
   RNS_to_MRS=0 RNS_to_BSS=0 BSS_to_RNS=0

F(A)=   18916=0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 

--F(b) calc--
low level statistic: 
   not=0 and=360 xor=360 nand=0 or=180 LUT_read=0
binary device statistic: 
   bits_copy=4 bits_ins=0 bits_cut=0 bits_set=0
   zero_proc=5 one_proc=0 two_proc=0
arith device statistic: 
   shift_left=16 shift_right=0 bin_equ=0 bin_cmp=0
   adder=9 subtractor=0 multiplier=4 divider=0
   pow2_proc=0 log2_down=0 log2_up=0 random=0
convertion subroutines statistic: 
   bin_to_longint=0 longint_to_bin=0 print=0
--F(b) calc--
RNS device statistic: 
   RNS_add=0 RNS_sub=0 RNS_mul=0 RNS_formal_div=0
   RNS_copy=0 RNS_equ=0 RNS_random=0
   RNS_sign(MRS)=0 RNS_sign(Parhami)=0
   RNS_to_MRS=0 RNS_to_BSS=0 BSS_to_RNS=0

F(B)=    2128=0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 

main: F:  bin_zero: Fa_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[1] --> tmp_a=  209716=0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   419432=0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   629152=1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   209728=0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[1]*A_RNS[1]=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F:  bin_add: Fa_bin=Fa_bin+mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[2] --> tmp_a=  224694=0 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   449388=0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  449388=0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   898776=1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  299588=0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   748976=1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   449376=0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[2]*A_RNS[2]=  299588=0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 
main: F:  bin_add: Fa_bin=Fa_bin+mul_tmp=  299588=0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[3] --> tmp_a=  233016=0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   466032=0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   932064=1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   815552=1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  815552=1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   582528=1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[3]*A_RNS[3]=  815552=1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 
main: F:  bin_add: Fa_bin=Fa_bin+mul_tmp=   66564=0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[4] --> tmp_a=  381304=0 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   762608=1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   476640=0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  476640=0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   953280=1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   857984=1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[4]*A_RNS[4]=  476640=0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 
main: F:  bin_add: Fa_bin=Fa_bin+mul_tmp=  543204=1 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 
main: F:  bin_zero: Fb_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[1] --> tmp_a=  209716=0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   419432=0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   629152=1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   209728=0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[1]*B_RNS[1]=  838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F:  bin_add: Fb_bin=Fb_bin+mul_tmp=  838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[2] --> tmp_a=  224694=0 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   449388=0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   898776=1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   748976=1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   449376=0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[2]*B_RNS[2]=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F:  bin_add: Fb_bin=Fb_bin+mul_tmp=  838864=1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[3] --> tmp_a=  233016=0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  233016=0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   466032=0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   932064=1 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  116504=0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   815552=1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   582528=1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[3]*B_RNS[3]=  116504=0 0 0 1 1 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 
main: F:  bin_add: Fb_bin=Fb_bin+mul_tmp=  955368=1 1 1 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 
main: F: bin_mul:  bin_copy_bits: LUT_k_approx[4] --> tmp_a=  381304=0 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 
main: F: bin_mul:  bin_zero: mul_tmp=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=  381304=0 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   762608=1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 
main: F: bin_mul:  bin_add: mul_tmp=mul_tmp+tmp_a=   95336=0 0 0 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   476640=0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   953280=1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 0 
main: F: bin_mul:  bin_shl(tmp_a,1)=   857984=1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 0 0 0 
main: F:  bin_mul: mul_tmp=LUT_k_approx[4]*B_RNS[4]=   95336=0 0 0 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 0 0 
main: F:  bin_add: Fb_bin=Fb_bin+mul_tmp=    2128=0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 
main: RNS_approx_div:  bin_zero: j_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
main: RNS_approx_div:  bin_one: one_bin=       1=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
main: RNS_approx_div:  bin_copy_bits: Fa_bin --> Fa_tmp=   18916=0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 
main: RNS_approx_div:  bin_copy_bits: Fb_bin --> Fb_tmp=    2128=0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 
main: RNS_approx_div:  bin_zero: Q_RNS[1]=       0=0 0 0 0 
main: RNS_approx_div:  bin_zero: Q_RNS[2]=       0=0 0 0 0 
main: RNS_approx_div:  bin_zero: Q_RNS[3]=       0=0 0 0 0 
main: RNS_approx_div:  bin_zero: Q_RNS[4]=       0=0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Fa_tmp,Fb_tmp)=one
main: RNS_approx_div:  bin_shl(Fb_tmp,1)=     4256=0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Fa_tmp,Fb_tmp)=one
main: RNS_approx_div:  bin_add: j_bin=j_bin+one_bin=       1=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
main: RNS_approx_div:  bin_shl(Fb_tmp,1)=     8512=0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Fa_tmp,Fb_tmp)=one
main: RNS_approx_div:  bin_add: j_bin=j_bin+one_bin=       2=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
main: RNS_approx_div:  bin_shl(Fb_tmp,1)=    17024=0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Fa_tmp,Fb_tmp)=one
main: RNS_approx_div:  bin_add: j_bin=j_bin+one_bin=       3=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
main: RNS_approx_div:  bin_shl(Fb_tmp,1)=    34048=0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Fa_tmp,Fb_tmp)=zero
main: RNS_approx_div:  bin_shr(Fb_tmp,1)=    17024=0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
main: RNS_approx_div:  bin_sub: Delta=Fa_tmp-Fb_tmp=    1892=0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 0 
main: RNS_approx_div:  bin_to_longint: j_bin=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 = 3
main: RNS_approx_div:  bin_to_longint: j_bin=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 = 3
main: RNS_approx_div: RNS_copy:  bin_copy_bits: pow2_RNS[3][1] --> Q_RNS[1]=       3=0 0 1 1 
main: RNS_approx_div: RNS_copy:  bin_copy_bits: pow2_RNS[3][2] --> Q_RNS[2]=       1=0 0 0 1 
main: RNS_approx_div: RNS_copy:  bin_copy_bits: pow2_RNS[3][3] --> Q_RNS[3]=       8=1 0 0 0 
main: RNS_approx_div: RNS_copy:  bin_copy_bits: pow2_RNS[3][4] --> Q_RNS[4]=       8=1 0 0 0 
main: RNS_approx_div:  RNS_copy: pow2_RNS[3]-->Q_RNS=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: RNS_approx_div:  bin_to_longint: j_bin=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 = 3
main: RNS_approx_div:  bin_shr(Fb_tmp,1)=     8512=0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Delta,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Delta,Fb_tmp)=zero
main: RNS_approx_div:  bin_shr(Fb_tmp,1)=     4256=0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Delta,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Delta,Fb_tmp)=zero
main: RNS_approx_div:  bin_shr(Fb_tmp,1)=     2128=0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 
main: RNS_approx_div:  bin_is_equal(Delta,Fb_tmp)=zero
main: RNS_approx_div:  bin_is_greater_than(Delta,Fb_tmp)=zero
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[1]=0 1 0 0 = 4
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[1]=0 0 1 1 = 3
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,B_RNS[1],Q_RNS[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: RNS_approx_div: RNS_mul:  LUT_mul[1,B_RNS[1],Q_RNS[1]]=       2=0 0 1 0 
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[2]=0 0 0 0 = 0
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,B_RNS[2],Q_RNS[2]] --> tmp_rns[2]=       0=0 0 0 0 
main: RNS_approx_div: RNS_mul:  LUT_mul[2,B_RNS[2],Q_RNS[2]]=       0=0 0 0 0 
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[3]=0 1 0 1 = 5
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[3]=1 0 0 0 = 8
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,B_RNS[3],Q_RNS[3]] --> tmp_rns[3]=       4=0 1 0 0 
main: RNS_approx_div: RNS_mul:  LUT_mul[3,B_RNS[3],Q_RNS[3]]=       4=0 1 0 0 
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[4]=0 0 1 1 = 3
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[4]=1 0 0 0 = 8
main: RNS_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,B_RNS[4],Q_RNS[4]] --> tmp_rns[4]=       2=0 0 1 0 
main: RNS_approx_div: RNS_mul:  LUT_mul[4,B_RNS[4],Q_RNS[4]]=       2=0 0 1 0 
main: RNS_approx_div:  RNS_mul: tmp_rns=B_RNS*Q_RNS=
       2=0 0 1 0 
       0=0 0 0 0 
       4=0 1 0 0 
       2=0 0 1 0 

main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[1]=0 0 0 0 = 0
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 1 0 = 2
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,A_RNS[1],tmp_rns[1]] --> R_RNS[1]=       3=0 0 1 1 
main: RNS_approx_div: RNS_sub:  LUT_sub[1,A_RNS[1],tmp_rns[1]]=       3=0 0 1 1 
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[2]=0 1 1 0 = 6
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 0 0 0 = 0
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,A_RNS[2],tmp_rns[2]] --> R_RNS[2]=       6=0 1 1 0 
main: RNS_approx_div: RNS_sub:  LUT_sub[2,A_RNS[2],tmp_rns[2]]=       6=0 1 1 0 
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[3]=1 0 0 0 = 8
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 1 0 0 = 4
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,A_RNS[3],tmp_rns[3]] --> R_RNS[3]=       4=0 1 0 0 
main: RNS_approx_div: RNS_sub:  LUT_sub[3,A_RNS[3],tmp_rns[3]]=       4=0 1 0 0 
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[4]=0 1 0 0 = 4
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 1 0 = 2
main: RNS_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,A_RNS[4],tmp_rns[4]] --> R_RNS[4]=       2=0 0 1 0 
main: RNS_approx_div: RNS_sub:  LUT_sub[4,A_RNS[4],tmp_rns[4]]=       2=0 0 1 0 
main: RNS_approx_div:  RNS_sub: R_RNS=A_RNS-tmp_rns=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 

main:  RNS_approx_div: (Q) Q_RNS=A_RNS/B_RNS=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main:  RNS_approx_div: (R) R_RNS=A_RNS/B_RNS=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 


RNS divider
low level statistic: 
   not=348 and=1320 xor=1160 nand=0 or=740 LUT_read=8
binary device statistic: 
   bits_copy=22 bits_ins=0 bits_cut=0 bits_set=0
   zero_proc=15 one_proc=1 two_proc=0
arith device statistic: 
   shift_left=36 shift_right=4 bin_equ=8 bin_cmp=8
   adder=20 subtractor=1 multiplier=8 divider=0
   pow2_proc=0 log2_down=0 log2_up=0 random=0
convertion subroutines statistic: 
   bin_to_longint=154 longint_to_bin=0 print=135
RNS divider
RNS device statistic: 
   RNS_add=0 RNS_sub=1 RNS_mul=1 RNS_formal_div=0
   RNS_copy=1 RNS_equ=0 RNS_random=0
   RNS_sign(MRS)=0 RNS_sign(Parhami)=0
   RNS_to_MRS=0 RNS_to_BSS=0 BSS_to_RNS=0

A=     125=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 
A=
       0=0 0 0 0 
       6=0 1 1 0 
       8=1 0 0 0 
       4=0 1 0 0 

B=      14=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
B=
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 

Q=       8=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
Q=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

R=      13=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
R=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 


Parhami alpha=       4=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
Parhami betta=       6=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
main: Parhami LUT_EF[  1][  0]=       0=0 0 0 0 0 0 
main: Parhami LUT_EF[  1][  1]=      25=0 1 1 0 0 1 
main: Parhami LUT_EF[  1][  2]=      51=1 1 0 0 1 1 
main: Parhami LUT_EF[  1][  3]=      12=0 0 1 1 0 0 
main: Parhami LUT_EF[  1][  4]=      38=1 0 0 1 1 0 

main: Parhami LUT_EF[  2][  0]=       0=0 0 0 0 0 0 
main: Parhami LUT_EF[  2][  1]=      27=0 1 1 0 1 1 
main: Parhami LUT_EF[  2][  2]=      54=1 1 0 1 1 0 
main: Parhami LUT_EF[  2][  3]=      18=0 1 0 0 1 0 
main: Parhami LUT_EF[  2][  4]=      45=1 0 1 1 0 1 
main: Parhami LUT_EF[  2][  5]=       9=0 0 1 0 0 1 
main: Parhami LUT_EF[  2][  6]=      36=1 0 0 1 0 0 

main: Parhami LUT_EF[  3][  0]=       0=0 0 0 0 0 0 
main: Parhami LUT_EF[  3][  1]=      28=0 1 1 1 0 0 
main: Parhami LUT_EF[  3][  2]=      56=1 1 1 0 0 0 
main: Parhami LUT_EF[  3][  3]=      21=0 1 0 1 0 1 
main: Parhami LUT_EF[  3][  4]=      49=1 1 0 0 0 1 
main: Parhami LUT_EF[  3][  5]=      14=0 0 1 1 1 0 
main: Parhami LUT_EF[  3][  6]=      42=1 0 1 0 1 0 
main: Parhami LUT_EF[  3][  7]=       7=0 0 0 1 1 1 
main: Parhami LUT_EF[  3][  8]=      35=1 0 0 0 1 1 

main: Parhami LUT_EF[  4][  0]=       0=0 0 0 0 0 0 
main: Parhami LUT_EF[  4][  1]=      46=1 0 1 1 1 0 
main: Parhami LUT_EF[  4][  2]=      29=0 1 1 1 0 1 
main: Parhami LUT_EF[  4][  3]=      11=0 0 1 0 1 1 
main: Parhami LUT_EF[  4][  4]=      58=1 1 1 0 1 0 
main: Parhami LUT_EF[  4][  5]=      40=1 0 1 0 0 0 
main: Parhami LUT_EF[  4][  6]=      23=0 1 0 1 1 1 
main: Parhami LUT_EF[  4][  7]=       5=0 0 0 1 0 1 
main: Parhami LUT_EF[  4][  8]=      52=1 1 0 1 0 0 
main: Parhami LUT_EF[  4][  9]=      34=1 0 0 0 1 0 
main: Parhami LUT_EF[  4][ 10]=      17=0 1 0 0 0 1 

 Parhami undef_edge=      59=1 1 1 0 1 1 
Parhami center_edge=      31=0 1 1 1 1 1 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: A_RNS[1] --> A_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: A_RNS[2] --> A_tmp[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: A_RNS[3] --> A_tmp[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: A_RNS[4] --> A_tmp[4]=       4=0 1 0 0 
main: Parhami_approx_div:  RNS_copy: A_RNS-->A_tmp=
       0=0 0 0 0 
       6=0 1 1 0 
       8=1 0 0 0 
       4=0 1 0 0 

main: Parhami_approx_div: RNS_copy:  bin_copy_bits: B_RNS[1] --> D_tmp[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: B_RNS[2] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: B_RNS[3] --> D_tmp[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: B_RNS[4] --> D_tmp[4]=       3=0 0 1 1 
main: Parhami_approx_div:  RNS_copy: B_RNS-->D_tmp=
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 

main: Parhami_approx_div:  bin_one: one_bin=       1=0 0 0 0 0 1 
main: Parhami_approx_div:  bin_zero: j_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: zero_RNS[1] --> Q_RNS[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: zero_RNS[2] --> Q_RNS[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: zero_RNS[3] --> Q_RNS[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_copy:  bin_copy_bits: zero_RNS[4] --> Q_RNS[4]=       0=0 0 0 0 
main: Parhami_approx_div:  RNS_copy: zero_RNS-->Q_RNS=
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       4=0 1 0 0 
       6=0 1 1 0 
       5=0 1 0 1 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=       9=1 0 0 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       0=0 0 0 0 
       6=0 1 1 0 
       0=0 0 0 0 
       9=1 0 0 1 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      36=1 0 0 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=      36=1 0 0 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=1 0 0 1 = 9
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=       6=0 0 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=1
main: Parhami_approx_div:  bin_add: j_bin=j_bin+one_bin=       1=0 0 0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,D_tmp[1],D_tmp[1]] --> D_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,D_tmp[1],D_tmp[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,D_tmp[2],D_tmp[2]] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,D_tmp[2],D_tmp[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,D_tmp[3],D_tmp[3]] --> D_tmp[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,D_tmp[3],D_tmp[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,D_tmp[4],D_tmp[4]] --> D_tmp[4]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,D_tmp[4],D_tmp[4]]=       6=0 1 1 0 
main: Parhami_approx_div:  RNS_add: D_tmp=D_tmp+D_tmp=
       3=0 0 1 1 
       0=0 0 0 0 
       1=0 0 0 1 
       6=0 1 1 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       9=1 0 0 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       0=0 0 0 0 
       6=0 1 1 0 
       0=0 0 0 0 
       9=1 0 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=1 0 0 1 = 9
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=       3=0 0 1 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       2=0 0 1 0 
       6=0 1 1 0 
       8=1 0 0 0 
       3=0 0 1 1 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=      51=1 1 0 0 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      23=0 1 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=1 0 0 0 = 8
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=      58=1 1 1 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=       5=0 0 0 1 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=1
main: Parhami_approx_div:  bin_add: j_bin=j_bin+one_bin=       2=0 0 0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,D_tmp[1],D_tmp[1]] --> D_tmp[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,D_tmp[1],D_tmp[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,D_tmp[2],D_tmp[2]] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,D_tmp[2],D_tmp[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,D_tmp[3],D_tmp[3]] --> D_tmp[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,D_tmp[3],D_tmp[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,D_tmp[4],D_tmp[4]] --> D_tmp[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,D_tmp[4],D_tmp[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_add: D_tmp=D_tmp+D_tmp=
       1=0 0 0 1 
       0=0 0 0 0 
       2=0 0 1 0 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       3=0 0 1 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       2=0 0 1 0 
       6=0 1 1 0 
       8=1 0 0 0 
       3=0 0 1 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       1=0 0 0 1 
       6=0 1 1 0 
       6=0 1 1 0 
       2=0 0 1 0 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 0 0 1 = 1
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=      25=0 1 1 0 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      61=1 1 1 1 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=      39=1 0 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=       4=0 0 0 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=1
main: Parhami_approx_div:  bin_add: j_bin=j_bin+one_bin=       3=0 0 0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,D_tmp[1],D_tmp[1]] --> D_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,D_tmp[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,D_tmp[2],D_tmp[2]] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,D_tmp[2],D_tmp[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,D_tmp[3],D_tmp[3]] --> D_tmp[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,D_tmp[3],D_tmp[3]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,D_tmp[4],D_tmp[4]] --> D_tmp[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,D_tmp[4],D_tmp[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_add: D_tmp=D_tmp+D_tmp=
       2=0 0 1 0 
       0=0 0 0 0 
       4=0 1 0 0 
       2=0 0 1 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       1=0 0 0 1 
       6=0 1 1 0 
       6=0 1 1 0 
       2=0 0 1 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=       0=0 0 0 0 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       4=0 1 0 0 
       6=0 1 1 0 
       2=0 0 1 0 
       0=0 0 0 0 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=      38=1 0 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      10=0 0 1 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=       2=0 0 0 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=       2=0 0 0 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=1
main: Parhami_approx_div:  bin_add: j_bin=j_bin+one_bin=       4=0 0 0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,D_tmp[1],D_tmp[1]] --> D_tmp[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,D_tmp[1],D_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,D_tmp[2],D_tmp[2]] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,D_tmp[2],D_tmp[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,D_tmp[3],D_tmp[3]] --> D_tmp[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,D_tmp[3],D_tmp[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,D_tmp[4],D_tmp[4]] --> D_tmp[4]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,D_tmp[4],D_tmp[4]]=       4=0 1 0 0 
main: Parhami_approx_div:  RNS_add: D_tmp=D_tmp+D_tmp=
       4=0 1 0 0 
       0=0 0 0 0 
       8=1 0 0 0 
       4=0 1 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       0=0 0 0 0 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       4=0 1 0 0 
       6=0 1 1 0 
       2=0 0 1 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=       7=0 1 1 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       0=0 0 0 0 
       6=0 1 1 0 
       3=0 0 1 1 
       7=0 1 1 1 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      36=1 0 0 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=      57=1 1 1 0 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=0 1 1 1 = 7
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=      62=1 1 1 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=one
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=0
main: Parhami_approx_div:  bin_add: j_bin=j_bin+one_bin=       5=0 0 0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,D_tmp[1],D_tmp[1]] --> D_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,D_tmp[1],D_tmp[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,D_tmp[2],D_tmp[2]] --> D_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,D_tmp[2],D_tmp[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,D_tmp[3],D_tmp[3]] --> D_tmp[3]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,D_tmp[3],D_tmp[3]]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,D_tmp[4],D_tmp[4]] --> D_tmp[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,D_tmp[4],D_tmp[4]]=       8=1 0 0 0 
main: Parhami_approx_div:  RNS_add: D_tmp=D_tmp+D_tmp=
       3=0 0 1 1 
       0=0 0 0 0 
       7=0 1 1 1 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Mdiv8[1],D_tmp[1]] --> tmp_rns[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Mdiv8[1],D_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Mdiv8[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Mdiv8[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Mdiv8[3],D_tmp[3]] --> tmp_rns[3]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Mdiv8[3],D_tmp[3]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Mdiv8[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Mdiv8[4],D_tmp[4]] --> tmp_rns[4]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Mdiv8[4],D_tmp[4]]=       7=0 1 1 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=Mdiv8-D_tmp=
       0=0 0 0 0 
       6=0 1 1 0 
       3=0 0 1 1 
       7=0 1 1 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,tmp_rns[1],D_tmp[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,tmp_rns[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,tmp_rns[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,tmp_rns[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,tmp_rns[3],D_tmp[3]] --> tmp_rns[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,tmp_rns[3],D_tmp[3]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,tmp_rns[4],D_tmp[4]] --> tmp_rns[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,tmp_rns[4],D_tmp[4]]=      10=1 0 1 0 
main: Parhami_approx_div:  RNS_sub: tmp_rns=tmp_rns-D_tmp=
       2=0 0 1 0 
       6=0 1 1 0 
       5=0 1 0 1 
      10=1 0 1 0 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[1]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_rns[1]]=      51=1 1 0 0 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_rns[2]]=      23=0 1 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[3]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_rns[3]]=      37=1 0 0 1 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_rns[4]=1 0 1 0 = 10
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_rns[4]]=      54=1 1 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_rns)=-1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,A_tmp[1],D_tmp[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,A_tmp[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,A_tmp[2],D_tmp[2]] --> tmp_rns[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,A_tmp[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,A_tmp[3],D_tmp[3]] --> tmp_rns[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,A_tmp[3],D_tmp[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,A_tmp[4],D_tmp[4]] --> tmp_rns[4]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,A_tmp[4],D_tmp[4]]=       7=0 1 1 1 
main: Parhami_approx_div:  RNS_sub: tmp_rns=A_tmp-D_tmp=
       2=0 0 1 0 
       6=0 1 1 0 
       1=0 0 0 1 
       7=0 1 1 1 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_res[1]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,tmp_res[1]]=      51=1 1 0 0 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_res[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,tmp_res[2]]=      23=0 1 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_res[3]=0 0 0 1 = 1
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,tmp_res[3]]=      51=1 1 0 0 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: tmp_res[4]=0 1 1 1 = 7
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,tmp_res[4]]=      56=1 1 1 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(tmp_res)=-1
main: Parhami_approx_div:  bin_one: i_bin=       1=0 0 0 0 0 1 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      36=1 0 0 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=       7=0 0 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=       1=0 0 0 0 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,A_tmp[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,A_tmp[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,A_tmp[3],D_tmp[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,A_tmp[4],D_tmp[4]]=       7=0 1 1 1 
main: Parhami_approx_div:  RNS_sub: A_tmp=A_tmp-D_tmp=
       2=0 0 1 0 
       6=0 1 1 0 
       1=0 0 0 1 
       7=0 1 1 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],A_tmp[1]] --> A_tmp[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],A_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],A_tmp[2]] --> A_tmp[2]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],A_tmp[2]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],A_tmp[3]] --> A_tmp[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],A_tmp[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],A_tmp[4]] --> A_tmp[4]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],A_tmp[4]]=       3=0 0 1 1 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+A_tmp=
       4=0 1 0 0 
       5=0 1 0 1 
       2=0 0 1 0 
       3=0 0 1 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],one_RNS[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],one_RNS[2]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],one_RNS[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],one_RNS[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+one_RNS=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],Q_RNS[1]] --> Q_RNS[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],Q_RNS[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],Q_RNS[2]] --> Q_RNS[2]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],Q_RNS[2]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],Q_RNS[3]] --> Q_RNS[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],Q_RNS[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],Q_RNS[4]] --> Q_RNS[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],Q_RNS[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+Q_RNS=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 

main: Parhami_approx_div:  bin_add: i_bin=i_bin+one_bin=       2=0 0 0 0 1 0 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=      38=1 0 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      47=1 0 1 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      39=1 0 0 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=      50=1 1 0 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=-1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],D_tmp[2]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],D_tmp[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],D_tmp[4]]=       0=0 0 0 0 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+D_tmp=
       2=0 0 1 0 
       5=0 1 0 1 
       0=0 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],A_tmp[1]] --> A_tmp[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],A_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],A_tmp[2]] --> A_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],A_tmp[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],A_tmp[3]] --> A_tmp[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],A_tmp[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],A_tmp[4]] --> A_tmp[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],A_tmp[4]]=       0=0 0 0 0 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+A_tmp=
       4=0 1 0 0 
       3=0 0 1 1 
       0=0 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Q_RNS[1],one_RNS[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[2]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Q_RNS[2],one_RNS[2]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Q_RNS[3],one_RNS[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Q_RNS[4],one_RNS[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_sub: Q_RNS=Q_RNS-one_RNS=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],Q_RNS[1]] --> Q_RNS[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],Q_RNS[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],Q_RNS[2]] --> Q_RNS[2]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],Q_RNS[2]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],Q_RNS[3]] --> Q_RNS[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],Q_RNS[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],Q_RNS[4]] --> Q_RNS[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],Q_RNS[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+Q_RNS=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 

main: Parhami_approx_div:  bin_add: i_bin=i_bin+one_bin=       3=0 0 0 0 1 1 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=      38=1 0 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      56=1 1 1 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      56=1 1 1 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=      56=1 1 1 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=-1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],D_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],D_tmp[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],D_tmp[3]]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],D_tmp[4]]=       8=1 0 0 0 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+D_tmp=
       2=0 0 1 0 
       3=0 0 1 1 
       7=0 1 1 1 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],A_tmp[1]] --> A_tmp[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],A_tmp[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],A_tmp[2]] --> A_tmp[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],A_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],A_tmp[3]] --> A_tmp[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],A_tmp[3]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],A_tmp[4]] --> A_tmp[4]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],A_tmp[4]]=       5=0 1 0 1 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+A_tmp=
       4=0 1 0 0 
       6=0 1 1 0 
       5=0 1 0 1 
       5=0 1 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Q_RNS[1],one_RNS[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[2]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Q_RNS[2],one_RNS[2]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Q_RNS[3],one_RNS[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Q_RNS[4],one_RNS[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_sub: Q_RNS=Q_RNS-one_RNS=
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],Q_RNS[1]] --> Q_RNS[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],Q_RNS[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],Q_RNS[2]] --> Q_RNS[2]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],Q_RNS[2]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],Q_RNS[3]] --> Q_RNS[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],Q_RNS[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],Q_RNS[4]] --> Q_RNS[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],Q_RNS[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+Q_RNS=
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 
       2=0 0 1 0 

main: Parhami_approx_div:  bin_add: i_bin=i_bin+one_bin=       4=0 0 0 1 0 0 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=      38=1 0 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      10=0 0 1 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      24=0 1 1 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,A_tmp[1],D_tmp[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,A_tmp[2],D_tmp[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,A_tmp[3],D_tmp[3]]=       7=0 1 1 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_tmp[4]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,A_tmp[4],D_tmp[4]]=       8=1 0 0 0 
main: Parhami_approx_div:  RNS_sub: A_tmp=A_tmp-D_tmp=
       1=0 0 0 1 
       6=0 1 1 0 
       7=0 1 1 1 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],A_tmp[1]] --> A_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],A_tmp[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],A_tmp[2]] --> A_tmp[2]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],A_tmp[2]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],A_tmp[3]] --> A_tmp[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],A_tmp[3]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],A_tmp[4]] --> A_tmp[4]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],A_tmp[4]]=       5=0 1 0 1 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+A_tmp=
       2=0 0 1 0 
       5=0 1 0 1 
       5=0 1 0 1 
       5=0 1 0 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],one_RNS[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],one_RNS[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],one_RNS[3]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],one_RNS[4]]=       3=0 0 1 1 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+one_RNS=
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],Q_RNS[1]] --> Q_RNS[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],Q_RNS[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],Q_RNS[2]] --> Q_RNS[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],Q_RNS[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],Q_RNS[3]] --> Q_RNS[3]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],Q_RNS[3]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],Q_RNS[4]] --> Q_RNS[4]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],Q_RNS[4]]=       6=0 1 1 0 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+Q_RNS=
       1=0 0 0 1 
       6=0 1 1 0 
       6=0 1 1 0 
       6=0 1 1 0 

main: Parhami_approx_div:  bin_add: i_bin=i_bin+one_bin=       5=0 0 0 1 0 1 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=zero
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=      51=1 1 0 0 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      60=1 1 1 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      10=0 0 1 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 1 0 1 = 5
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=      50=1 1 0 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=-1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],D_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],D_tmp[2]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],D_tmp[3]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],D_tmp[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+D_tmp=
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 
       2=0 0 1 0 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],A_tmp[1]] --> A_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],A_tmp[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],A_tmp[2]] --> A_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],A_tmp[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],A_tmp[3]] --> A_tmp[3]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],A_tmp[3]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],A_tmp[4]] --> A_tmp[4]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],A_tmp[4]]=       4=0 1 0 0 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+A_tmp=
       0=0 0 0 0 
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Q_RNS[1],one_RNS[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Q_RNS[2],one_RNS[2]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[3]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Q_RNS[3],one_RNS[3]]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[4]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Q_RNS[4],one_RNS[4]]=       5=0 1 0 1 
main: Parhami_approx_div:  RNS_sub: Q_RNS=Q_RNS-one_RNS=
       0=0 0 0 0 
       5=0 1 0 1 
       5=0 1 0 1 
       5=0 1 0 1 

main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,Q_RNS[1],Q_RNS[1]] --> Q_RNS[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[1,Q_RNS[1],Q_RNS[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[2]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,Q_RNS[2],Q_RNS[2]] --> Q_RNS[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,Q_RNS[2],Q_RNS[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,Q_RNS[3],Q_RNS[3]] --> Q_RNS[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[3,Q_RNS[3],Q_RNS[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: Q_RNS[4]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,Q_RNS[4],Q_RNS[4]] --> Q_RNS[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[4,Q_RNS[4],Q_RNS[4]]=      10=1 0 1 0 
main: Parhami_approx_div:  RNS_add: Q_RNS=Q_RNS+Q_RNS=
       0=0 0 0 0 
       3=0 0 1 1 
       1=0 0 0 1 
      10=1 0 1 0 

main: Parhami_approx_div:  bin_add: i_bin=i_bin+one_bin=       6=0 0 0 1 1 0 
main: Parhami_approx_div:  bin_is_greater_than(i_bin,j_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      18=0 1 0 0 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 1 1 0 = 6
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      60=1 1 1 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=      54=1 1 0 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=zero
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=-1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],D_tmp[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],D_tmp[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],D_tmp[3]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],D_tmp[4]]=       1=0 0 0 1 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+D_tmp=
       3=0 0 1 1 
       3=0 0 1 1 
       4=0 1 0 0 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Q_RNS[1],one_RNS[1]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Q_RNS[2],one_RNS[2]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Q_RNS[3],one_RNS[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[4]=1 0 1 0 = 10
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Q_RNS[4],one_RNS[4]]=       9=1 0 0 1 
main: Parhami_approx_div:  RNS_sub: Q_RNS=Q_RNS-one_RNS=
       4=0 1 0 0 
       2=0 0 1 0 
       0=0 0 0 0 
       9=1 0 0 1 

main: Parhami_approx_div: Parhami_ES:  bin_zero: sum_bin=       0=0 0 0 0 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[1,A_tmp[1]]=      12=0 0 1 1 0 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[2,A_tmp[2]]=      30=0 1 1 1 1 0 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[3,A_tmp[3]]=      15=0 0 1 1 1 1 
main: Parhami_approx_div: Parhami_ES:  bin_to_longint: A_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: Parhami_ES:  bin_add: sum_bin=sum_bin+LUT_EF[4,A_tmp[4]]=      61=1 1 1 1 0 1 
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,center_edge_bin)=one
main: Parhami_approx_div: Parhami_ES:  bin_is_greater_than(sum_bin,undef_edge_bin)=one
main: Parhami_approx_div:  Parhami_ES: sign(A_tmp)=0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[1],zero_RNS[1])=zero
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[2],zero_RNS[2])=zero
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[3],zero_RNS[3])=zero
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[4],zero_RNS[4])=zero
main: Parhami_approx_div: RNS_sign_by_MRS:  RNS_is_equal(A_tmp,zero_RNS)=zero
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_copy:  bin_copy_bits: A_tmp[1] --> x_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_copy:  bin_copy_bits: A_tmp[2] --> x_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_copy:  bin_copy_bits: A_tmp[3] --> x_tmp[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_copy:  bin_copy_bits: A_tmp[4] --> x_tmp[4]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_copy: A_tmp-->x_tmp=
       3=0 0 1 1 
       3=0 0 1 1 
       4=0 1 0 0 
       1=0 0 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_copy_bits: x_tmp[1] --> res[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_to_longint: x_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[3][1] --> digit[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[3][2] --> digit[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[3][3] --> digit[3]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[3][4] --> digit[4]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig:  RNS_copy: LUT_digs[3]-->digit=
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_digs[3]=
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 
       3=0 0 1 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,x_tmp[1],digit[1]] --> x_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[1,x_tmp[1],digit[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,x_tmp[2],digit[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[2,x_tmp[2],digit[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[3]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,x_tmp[3],digit[3]] --> x_tmp[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[3,x_tmp[3],digit[3]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,x_tmp[4],digit[4]] --> x_tmp[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[4,x_tmp[4],digit[4]]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_sub: x_tmp=x_tmp-digit=
       0=0 0 0 0 
       0=0 0 0 0 
       1=0 0 0 1 
       9=1 0 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[1][1] --> inv_P[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[1][2] --> inv_P[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[1][3] --> inv_P[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[1][4] --> inv_P[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P:  RNS_copy: LUT_inv_p[1]-->inv_P=
       0=0 0 0 0 
       3=0 0 1 1 
       2=0 0 1 0 
       9=1 0 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_inv_P[1]=
       0=0 0 0 0 
       3=0 0 1 1 
       2=0 0 1 0 
       9=1 0 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,x_tmp[1],inv_P[1]] --> x_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[1,x_tmp[1],inv_P[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,x_tmp[2],inv_P[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[2,x_tmp[2],inv_P[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,x_tmp[3],inv_P[3]] --> x_tmp[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[3,x_tmp[3],inv_P[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[4]=1 0 0 1 = 9
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[4]=1 0 0 1 = 9
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,x_tmp[4],inv_P[4]] --> x_tmp[4]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[4,x_tmp[4],inv_P[4]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_mul: x_tmp=x_tmp*inv_P=
       0=0 0 0 0 
       0=0 0 0 0 
       2=0 0 1 0 
       4=0 1 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_copy_bits: x_tmp[2] --> res[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[0][1] --> digit[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[0][2] --> digit[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[0][3] --> digit[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[0][4] --> digit[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig:  RNS_copy: LUT_digs[0]-->digit=
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_digs[0]=
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,x_tmp[1],digit[1]] --> x_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[1,x_tmp[1],digit[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,x_tmp[2],digit[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[2,x_tmp[2],digit[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,x_tmp[3],digit[3]] --> x_tmp[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[3,x_tmp[3],digit[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,x_tmp[4],digit[4]] --> x_tmp[4]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[4,x_tmp[4],digit[4]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_sub: x_tmp=x_tmp-digit=
       0=0 0 0 0 
       0=0 0 0 0 
       2=0 0 1 0 
       4=0 1 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[2][1] --> inv_P[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[2][2] --> inv_P[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[2][3] --> inv_P[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[2][4] --> inv_P[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P:  RNS_copy: LUT_inv_p[2]-->inv_P=
       3=0 0 1 1 
       0=0 0 0 0 
       4=0 1 0 0 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_inv_P[2]=
       3=0 0 1 1 
       0=0 0 0 0 
       4=0 1 0 0 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,x_tmp[1],inv_P[1]] --> x_tmp[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[1,x_tmp[1],inv_P[1]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,x_tmp[2],inv_P[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[2,x_tmp[2],inv_P[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[3]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,x_tmp[3],inv_P[3]] --> x_tmp[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[3,x_tmp[3],inv_P[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,x_tmp[4],inv_P[4]] --> x_tmp[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[4,x_tmp[4],inv_P[4]]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_mul: x_tmp=x_tmp*inv_P=
       0=0 0 0 0 
       0=0 0 0 0 
       8=1 0 0 0 
      10=1 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_copy_bits: x_tmp[3] --> res[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_to_longint: x_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[8][1] --> digit[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[8][2] --> digit[2]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[8][3] --> digit[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[8][4] --> digit[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig:  RNS_copy: LUT_digs[8]-->digit=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_digs[8]=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,x_tmp[1],digit[1]] --> x_tmp[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[1,x_tmp[1],digit[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,x_tmp[2],digit[2]] --> x_tmp[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[2,x_tmp[2],digit[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,x_tmp[3],digit[3]] --> x_tmp[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[3,x_tmp[3],digit[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[4]=1 0 1 0 = 10
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,x_tmp[4],digit[4]] --> x_tmp[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[4,x_tmp[4],digit[4]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_sub: x_tmp=x_tmp-digit=
       2=0 0 1 0 
       6=0 1 1 0 
       0=0 0 0 0 
       2=0 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[3][1] --> inv_P[1]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[3][2] --> inv_P[2]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[3][3] --> inv_P[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[3][4] --> inv_P[4]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P:  RNS_copy: LUT_inv_p[3]-->inv_P=
       4=0 1 0 0 
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_inv_P[3]=
       4=0 1 0 0 
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,x_tmp[1],inv_P[1]] --> x_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[1,x_tmp[1],inv_P[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[2]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,x_tmp[2],inv_P[2]] --> x_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[2,x_tmp[2],inv_P[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,x_tmp[3],inv_P[3]] --> x_tmp[3]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[3,x_tmp[3],inv_P[3]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[4]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,x_tmp[4],inv_P[4]] --> x_tmp[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[4,x_tmp[4],inv_P[4]]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_mul: x_tmp=x_tmp*inv_P=
       3=0 0 1 1 
       3=0 0 1 1 
       0=0 0 0 0 
      10=1 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_copy_bits: x_tmp[4] --> res[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  bin_to_longint: x_tmp[4]=1 0 1 0 = 10
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[10][1] --> digit[1]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[10][2] --> digit[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[10][3] --> digit[3]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig: RNS_copy:  bin_copy_bits: LUT_digs[10][4] --> digit[4]=      10=1 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_dig:  RNS_copy: LUT_digs[10]-->digit=
       0=0 0 0 0 
       3=0 0 1 1 
       1=0 0 0 1 
      10=1 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_digs[10]=
       0=0 0 0 0 
       3=0 0 1 1 
       1=0 0 0 1 
      10=1 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,x_tmp[1],digit[1]] --> x_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[1,x_tmp[1],digit[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,x_tmp[2],digit[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[2,x_tmp[2],digit[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,x_tmp[3],digit[3]] --> x_tmp[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[3,x_tmp[3],digit[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: x_tmp[4]=1 0 1 0 = 10
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_to_longint: digit[4]=1 0 1 0 = 10
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,x_tmp[4],digit[4]] --> x_tmp[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_sub:  LUT_sub[4,x_tmp[4],digit[4]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_sub: x_tmp=x_tmp-digit=
       3=0 0 1 1 
       0=0 0 0 0 
       8=1 0 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[4][1] --> inv_P[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[4][2] --> inv_P[2]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[4][3] --> inv_P[3]=       5=0 1 0 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P: RNS_copy:  bin_copy_bits: LUT_inv_p[4][4] --> inv_P[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_LUT_inv_P:  RNS_copy: LUT_inv_p[4]-->inv_P=
       1=0 0 0 1 
       2=0 0 1 0 
       5=0 1 0 1 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  LUT_inv_P[4]=
       1=0 0 0 1 
       2=0 0 1 0 
       5=0 1 0 1 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,x_tmp[1],inv_P[1]] --> x_tmp[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[1,x_tmp[1],inv_P[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[2]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,x_tmp[2],inv_P[2]] --> x_tmp[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[2,x_tmp[2],inv_P[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,x_tmp[3],inv_P[3]] --> x_tmp[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[3,x_tmp[3],inv_P[3]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: x_tmp[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_to_longint: inv_P[4]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,x_tmp[4],inv_P[4]] --> x_tmp[4]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS: RNS_mul:  LUT_mul[4,x_tmp[4],inv_P[4]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_to_MRS:  RNS_mul: x_tmp=x_tmp*inv_P=
       3=0 0 1 1 
       0=0 0 0 0 
       4=0 1 0 0 
       0=0 0 0 0 

main: Parhami_approx_div: RNS_sign_by_MRS:  RNS_to_MRS: A_tmp=>x_MRS=
       3=0 0 1 1 
       0=0 0 0 0 
       8=1 0 0 0 
      10=1 0 1 0 

main: Parhami_approx_div: RNS_sign_by_MRS:  bin_is_greater_than(P_div2_RNS[4],x_MRS[4])=zero
main: Parhami_approx_div: RNS_sign_by_MRS:  bin_is_greater_than(x_MRS[4],P_div2_RNS[4])=one
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[1],P_div2_RNS[1])=zero
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[2],P_div2_RNS[2])=one
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[3],P_div2_RNS[3])=one
main: Parhami_approx_div: RNS_sign_by_MRS: RNS_is_equal:  bin_is_equal(A_tmp[4],P_div2_RNS[4])=zero
main: Parhami_approx_div: RNS_sign_by_MRS:  RNS_is_equal(A_tmp,P_div2_RNS)=zero
main: Parhami_approx_div:  RNS_sign_by_MRS: sign(A_tmp)=-1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[1,A_tmp[1],D_tmp[1]] --> A_tmp[1]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[1,A_tmp[1],D_tmp[1]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[2]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[2,A_tmp[2],D_tmp[2]] --> A_tmp[2]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add:  LUT_add[2,A_tmp[2],D_tmp[2]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[3]=0 1 1 1 = 7
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[3,A_tmp[3],D_tmp[3]] --> A_tmp[3]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add:  LUT_add[3,A_tmp[3],D_tmp[3]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: A_tmp[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_to_longint: D_tmp[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_add: RNS_LUT_ADD:  bin_copy_bits: LUT_add[4,A_tmp[4],D_tmp[4]] --> A_tmp[4]=       9=1 0 0 1 
main: Parhami_approx_div: RNS_add:  LUT_add[4,A_tmp[4],D_tmp[4]]=       9=1 0 0 1 
main: Parhami_approx_div:  RNS_add: A_tmp=A_tmp+D_tmp=
       1=0 0 0 1 
       3=0 0 1 1 
       2=0 0 1 0 
       9=1 0 0 1 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[1]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,Q_RNS[1],one_RNS[1]] --> Q_RNS[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,Q_RNS[1],one_RNS[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[2]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,Q_RNS[2],one_RNS[2]] --> Q_RNS[2]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,Q_RNS[2],one_RNS[2]]=       1=0 0 0 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[3]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[3]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,Q_RNS[3],one_RNS[3]] --> Q_RNS[3]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,Q_RNS[3],one_RNS[3]]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: Q_RNS[4]=1 0 0 1 = 9
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: one_RNS[4]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,Q_RNS[4],one_RNS[4]] --> Q_RNS[4]=       8=1 0 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,Q_RNS[4],one_RNS[4]]=       8=1 0 0 0 
main: Parhami_approx_div:  RNS_sub: Q_RNS=Q_RNS-one_RNS=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[1]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[1]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[1,B_RNS[1],Q_RNS[1]] --> tmp_rns[1]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_mul:  LUT_mul[1,B_RNS[1],Q_RNS[1]]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[2]=0 0 0 1 = 1
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[2,B_RNS[2],Q_RNS[2]] --> tmp_rns[2]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_mul:  LUT_mul[2,B_RNS[2],Q_RNS[2]]=       0=0 0 0 0 
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[3]=0 1 0 1 = 5
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[3,B_RNS[3],Q_RNS[3]] --> tmp_rns[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_mul:  LUT_mul[3,B_RNS[3],Q_RNS[3]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: B_RNS[4]=0 0 1 1 = 3
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_to_longint: Q_RNS[4]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_mul: RNS_LUT_MUL:  bin_copy_bits: LUT_mul[4,B_RNS[4],Q_RNS[4]] --> tmp_rns[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_mul:  LUT_mul[4,B_RNS[4],Q_RNS[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_mul: tmp_rns=B_RNS*Q_RNS=
       2=0 0 1 0 
       0=0 0 0 0 
       4=0 1 0 0 
       2=0 0 1 0 

main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[1]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[1]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[1,A_RNS[1],tmp_rns[1]] --> R_RNS[1]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub:  LUT_sub[1,A_RNS[1],tmp_rns[1]]=       3=0 0 1 1 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[2]=0 1 1 0 = 6
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[2]=0 0 0 0 = 0
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[2,A_RNS[2],tmp_rns[2]] --> R_RNS[2]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[2,A_RNS[2],tmp_rns[2]]=       6=0 1 1 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[3]=1 0 0 0 = 8
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[3]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[3,A_RNS[3],tmp_rns[3]] --> R_RNS[3]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[3,A_RNS[3],tmp_rns[3]]=       4=0 1 0 0 
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: A_RNS[4]=0 1 0 0 = 4
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_to_longint: tmp_rns[4]=0 0 1 0 = 2
main: Parhami_approx_div: RNS_sub: RNS_LUT_SUB:  bin_copy_bits: LUT_sub[4,A_RNS[4],tmp_rns[4]] --> R_RNS[4]=       2=0 0 1 0 
main: Parhami_approx_div: RNS_sub:  LUT_sub[4,A_RNS[4],tmp_rns[4]]=       2=0 0 1 0 
main: Parhami_approx_div:  RNS_sub: R_RNS=A_RNS-tmp_rns=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 

main:  Parhami_approx_div: (Q) Q_RNS=A_RNS/B_RNS=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

main:  Parhami_approx_div: (R) R_RNS=A_RNS/B_RNS=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 


Parhami divider
low level statistic: 
   not=432 and=1428 xor=1036 nand=0 or=640 LUT_read=230
binary device statistic: 
   bits_copy=260 bits_ins=0 bits_cut=0 bits_set=0
   zero_proc=15 one_proc=2 two_proc=0
arith device statistic: 
   shift_left=0 shift_right=0 bin_equ=8 bin_cmp=36
   adder=66 subtractor=0 multiplier=0 divider=0
   pow2_proc=0 log2_down=0 log2_up=0 random=0
convertion subroutines statistic: 
   bin_to_longint=1327 longint_to_bin=0 print=851
Parhami divider
RNS device statistic: 
   RNS_add=22 RNS_sub=25 RNS_mul=5 RNS_formal_div=0
   RNS_copy=12 RNS_equ=2 RNS_random=0
   RNS_sign(MRS)=1 RNS_sign(Parhami)=14
   RNS_to_MRS=1 RNS_to_BSS=0 BSS_to_RNS=0

A=     125=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 
A=
       0=0 0 0 0 
       6=0 1 1 0 
       8=1 0 0 0 
       4=0 1 0 0 

B=      14=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
B=
       4=0 1 0 0 
       0=0 0 0 0 
       5=0 1 0 1 
       3=0 0 1 1 

Q=       8=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
Q=
       3=0 0 1 1 
       1=0 0 0 1 
       8=1 0 0 0 
       8=1 0 0 0 

R=      13=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
R=
       3=0 0 1 1 
       6=0 1 1 0 
       4=0 1 0 0 
       2=0 0 1 0 


main: bin_div:  bin_copy_bits: A_bin --> a_tmp=     125=0 0 0 0 0 1 1 1 1 1 0 1 
main: bin_div:  bin_copy_bits: B_bin --> b_tmp=      14=0 0 0 0 0 0 0 0 1 1 1 0 
main: bin_div:  bin_zero: Q_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_zero: R_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_is_equal(a_tmp,b_tmp)=zero
main: bin_div:  bin_is_greater_than(a_tmp,b_tmp)=one
main: bin_div:  bin_zero: j_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_zero: zero_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_one: one_bin=       1=0 0 0 0 0 0 0 0 0 0 0 1 
main: bin_div:  bin_shl(b_tmp,1)=       28=0 0 0 0 0 0 0 1 1 1 0 0 
main: bin_div:  bin_is_equal(a_tmp,b_tmp)=zero
main: bin_div:  bin_is_greater_than(a_tmp,b_tmp)=one
main: bin_div:  bin_add: j_bin=j_bin+one_bin=       1=0 0 0 0 0 0 0 0 0 0 0 1 
main: bin_div: bin_shl(b_tmp,1)=       56=0 0 0 0 0 0 1 1 1 0 0 0 
main: bin_div:  bin_is_equal(a_tmp,b_tmp)=zero
main: bin_div:  bin_is_greater_than(a_tmp,b_tmp)=one
main: bin_div:  bin_add: j_bin=j_bin+one_bin=       2=0 0 0 0 0 0 0 0 0 0 1 0 
main: bin_div: bin_shl(b_tmp,1)=      112=0 0 0 0 0 1 1 1 0 0 0 0 
main: bin_div:  bin_is_equal(a_tmp,b_tmp)=zero
main: bin_div:  bin_is_greater_than(a_tmp,b_tmp)=one
main: bin_div:  bin_add: j_bin=j_bin+one_bin=       3=0 0 0 0 0 0 0 0 0 0 1 1 
main: bin_div: bin_shl(b_tmp,1)=      224=0 0 0 0 1 1 1 0 0 0 0 0 
main: bin_div:  bin_is_equal(a_tmp,b_tmp)=zero
main: bin_div:  bin_is_greater_than(a_tmp,b_tmp)=zero
main: bin_div:  bin_shr(b_tmp,1)=      112=0 0 0 0 0 1 1 1 0 0 0 0 
main: bin_div:  bin_sub: Delta=a_tmp-b_tmp=      13=0 0 0 0 0 0 0 0 1 1 0 1 
main: bin_div:  bin_to_longint: j_bin=0 0 0 0 0 0 0 0 0 0 1 1 = 3
main: bin_div:  bin_is_equal(j_bin,zero_bin)=zero
main: bin_div:  bin_shr(b_tmp,1)=       56=0 0 0 0 0 0 1 1 1 0 0 0 
main: bin_div: bin_is_equal(Delta,b_tmp)=zero
main: bin_div:  bin_is_greater_than(Delta,b_tmp)=zero
main: bin_div:  bin_sub: j_bin=j_bin-one_bin=       2=0 0 0 0 0 0 0 0 0 0 1 0 
main: bin_div:  bin_is_equal(j_bin,zero_bin)=zero
main: bin_div:  bin_shr(b_tmp,1)=       28=0 0 0 0 0 0 0 1 1 1 0 0 
main: bin_div: bin_is_equal(Delta,b_tmp)=zero
main: bin_div:  bin_is_greater_than(Delta,b_tmp)=zero
main: bin_div:  bin_sub: j_bin=j_bin-one_bin=       1=0 0 0 0 0 0 0 0 0 0 0 1 
main: bin_div:  bin_is_equal(j_bin,zero_bin)=zero
main: bin_div:  bin_shr(b_tmp,1)=       14=0 0 0 0 0 0 0 0 1 1 1 0 
main: bin_div: bin_is_equal(Delta,b_tmp)=zero
main: bin_div:  bin_is_greater_than(Delta,b_tmp)=zero
main: bin_div:  bin_sub: j_bin=j_bin-one_bin=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_is_equal(j_bin,zero_bin)=one
main: bin_div: bin_mul:  bin_copy_bits: B_bin --> tmp_a=      14=0 0 0 0 0 0 0 0 1 1 1 0 
main: bin_div: bin_mul:  bin_zero: Delta=       0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=       28=0 0 0 0 0 0 0 1 1 1 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=       56=0 0 0 0 0 0 1 1 1 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=      112=0 0 0 0 0 1 1 1 0 0 0 0 
main: bin_div: bin_mul:  bin_add: Delta=Delta+tmp_a=     112=0 0 0 0 0 1 1 1 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=      224=0 0 0 0 1 1 1 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=      448=0 0 0 1 1 1 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=      896=0 0 1 1 1 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=     1792=0 1 1 1 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=     3584=1 1 1 0 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=     3072=1 1 0 0 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=     2048=1 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=        0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div: bin_mul:  bin_shl(tmp_a,1)=        0=0 0 0 0 0 0 0 0 0 0 0 0 
main: bin_div:  bin_mul: Delta=B_bin*Q_bin=     112=0 0 0 0 0 1 1 1 0 0 0 0 
main: bin_div:  bin_sub: R_bin=A_bin-Delta=      13=0 0 0 0 0 0 0 0 1 1 0 1 
main:  bin_div: (Q) A_bin/B_bin=Q_bin=       8=0 0 0 0 0 0 0 0 1 0 0 0 
main:  bin_div: (R) A_bin/B_bin=R_bin=      13=0 0 0 0 0 0 0 0 1 1 0 1 
BSS divider
low level statistic: 
   not=264 and=504 xor=456 nand=0 or=348 LUT_read=0
binary device statistic: 
   bits_copy=3 bits_ins=0 bits_cut=0 bits_set=0
   zero_proc=5 one_proc=1 two_proc=0
arith device statistic: 
   shift_left=16 shift_right=4 bin_equ=12 bin_cmp=8
   adder=4 subtractor=5 multiplier=1 divider=1
   pow2_proc=0 log2_down=0 log2_up=0 random=0
convertion subroutines statistic: 
   bin_to_longint=42 longint_to_bin=0 print=41
BSS divider
RNS device statistic: 
   RNS_add=0 RNS_sub=0 RNS_mul=0 RNS_formal_div=0
   RNS_copy=0 RNS_equ=0 RNS_random=0
   RNS_sign(MRS)=0 RNS_sign(Parhami)=0
   RNS_to_MRS=0 RNS_to_BSS=0 BSS_to_RNS=0

A=     125=0 0 0 0 0 1 1 1 1 1 0 1 
B=      14=0 0 0 0 0 0 0 0 1 1 1 0 
Q=       8=0 0 0 0 0 0 0 0 1 0 0 0 
R=      13=0 0 0 0 0 0 0 0 1 1 0 1 

===============================================================================
|    bin compare|                   RNS divider|               Parhami divider|
-------------------------------------------------------------------------------
| bin_to_longint|                           154|                          1327|
| longint_to_bin|                             0|                             0|
-------------------------------------------------------------------------------
| copy bits proc|                            22|                           260|
|  ins bits proc|                             0|                             0|
|  cut bits proc|                             0|                             0|
|  set bits proc|                             0|                             0|
-------------------------------------------------------------------------------
|      zero_proc|                            15|                            15|
|       one_proc|                             1|                             2|
|       two_proc|                             0|                             0|
-------------------------------------------------------------------------------
|     shift left|                            36|                             0|
|    shift right|                             4|                             0|
|            equ|                             8|                             8|
|            cmp|                             8|                            36|
-------------------------------------------------------------------------------
|      pow2 proc|                             0|                             0|
| log2 down proc|                             0|                             0|
|   log2 up proc|                             0|                             0|
|    random proc|                             0|                             0|
-------------------------------------------------------------------------------
|          adder|                            20|                            66|
|     subtractor|                             1|                             0|
|     multiplier|                             8|                             0|
|        divider|                             0|                             0|
-------------------------------------------------------------------------------
|       LUT read|                             8|                           230|
-------------------------------------------------------------------------------
|            not|                           348|                           432|
|            and|                          1320|                          1428|
|            xor|                          1160|                          1036|
|           nand|                             0|                             0|
|             or|                           740|                           640|
-------------------------------------------------------------------------------
|  gates summary|                          3568|                          3536|
===============================================================================
===============================================================================
|    RNS compare|                   RNS divider|               Parhami divider|
-------------------------------------------------------------------------------
|        RNS_add|                             0|                            22|
|        RNS_sub|                             1|                            25|
|        RNS_mul|                             1|                             5|
| RNS_formal_div|                             0|                             0|
|       RNS_copy|                             1|                            12|
|        RNS_equ|                             0|                             2|
|     RNS_random|                             0|                             0|
|  RNS_sign(MRS)|                             0|                             1|
|RNS_sgn_Parhami|                             0|                            14|
|     RNS_to_MRS|                             0|                             1|
|     RNS_to_BSS|                             0|                             0|
|     BSS_to_RNS|                             0|                             0|
===============================================================================

===============================================================================
|    bin compare|                   RNS divider|                   BSS divider|
-------------------------------------------------------------------------------
| bin_to_longint|                           154|                            42|
| longint_to_bin|                             0|                             0|
-------------------------------------------------------------------------------
| copy bits proc|                            22|                             3|
|  ins bits proc|                             0|                             0|
|  cut bits proc|                             0|                             0|
|  set bits proc|                             0|                             0|
-------------------------------------------------------------------------------
|      zero_proc|                            15|                             5|
|       one_proc|                             1|                             1|
|       two_proc|                             0|                             0|
-------------------------------------------------------------------------------
|     shift left|                            36|                            16|
|    shift right|                             4|                             4|
|            equ|                             8|                            12|
|            cmp|                             8|                             8|
-------------------------------------------------------------------------------
|      pow2 proc|                             0|                             0|
| log2 down proc|                             0|                             0|
|   log2 up proc|                             0|                             0|
|    random proc|                             0|                             0|
-------------------------------------------------------------------------------
|          adder|                            20|                             4|
|     subtractor|                             1|                             5|
|     multiplier|                             8|                             1|
|        divider|                             0|                             1|
-------------------------------------------------------------------------------
|       LUT read|                             8|                             0|
-------------------------------------------------------------------------------
|            not|                           348|                           264|
|            and|                          1320|                           504|
|            xor|                          1160|                           456|
|           nand|                             0|                             0|
|             or|                           740|                           348|
-------------------------------------------------------------------------------
|  gates summary|                          3568|                          1572|
===============================================================================
===============================================================================
|    RNS compare|                   RNS divider|                   BSS divider|
-------------------------------------------------------------------------------
|        RNS_add|                             0|                             0|
|        RNS_sub|                             1|                             0|
|        RNS_mul|                             1|                             0|
| RNS_formal_div|                             0|                             0|
|       RNS_copy|                             1|                             0|
|        RNS_equ|                             0|                             0|
|     RNS_random|                             0|                             0|
|  RNS_sign(MRS)|                             0|                             0|
|RNS_sgn_Parhami|                             0|                             0|
|     RNS_to_MRS|                             0|                             0|
|     RNS_to_BSS|                             0|                             0|
|     BSS_to_RNS|                             0|                             0|
===============================================================================

===============================================================================
|    bin compare|               Parhami divider|                   BSS divider|
-------------------------------------------------------------------------------
| bin_to_longint|                          1327|                            42|
| longint_to_bin|                             0|                             0|
-------------------------------------------------------------------------------
| copy bits proc|                           260|                             3|
|  ins bits proc|                             0|                             0|
|  cut bits proc|                             0|                             0|
|  set bits proc|                             0|                             0|
-------------------------------------------------------------------------------
|      zero_proc|                            15|                             5|
|       one_proc|                             2|                             1|
|       two_proc|                             0|                             0|
-------------------------------------------------------------------------------
|     shift left|                             0|                            16|
|    shift right|                             0|                             4|
|            equ|                             8|                            12|
|            cmp|                            36|                             8|
-------------------------------------------------------------------------------
|      pow2 proc|                             0|                             0|
| log2 down proc|                             0|                             0|
|   log2 up proc|                             0|                             0|
|    random proc|                             0|                             0|
-------------------------------------------------------------------------------
|          adder|                            66|                             4|
|     subtractor|                             0|                             5|
|     multiplier|                             0|                             1|
|        divider|                             0|                             1|
-------------------------------------------------------------------------------
|       LUT read|                           230|                             0|
-------------------------------------------------------------------------------
|            not|                           432|                           264|
|            and|                          1428|                           504|
|            xor|                          1036|                           456|
|           nand|                             0|                             0|
|             or|                           640|                           348|
-------------------------------------------------------------------------------
|  gates summary|                          3536|                          1572|
===============================================================================
===============================================================================
|    RNS compare|               Parhami divider|                   BSS divider|
-------------------------------------------------------------------------------
|        RNS_add|                            22|                             0|
|        RNS_sub|                            25|                             0|
|        RNS_mul|                             5|                             0|
| RNS_formal_div|                             0|                             0|
|       RNS_copy|                            12|                             0|
|        RNS_equ|                             2|                             0|
|     RNS_random|                             0|                             0|
|  RNS_sign(MRS)|                             1|                             0|
|RNS_sgn_Parhami|                            14|                             0|
|     RNS_to_MRS|                             1|                             0|
|     RNS_to_BSS|                             0|                             0|
|     BSS_to_RNS|                             0|                             0|
===============================================================================

